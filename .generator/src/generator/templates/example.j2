// {{ scenario.name|wordwrap(width=120)}}

{%- set required_parameters, optional_parameters, parameters_models = format_parameters(context.api_request.kwargs, spec=operation_spec, replace_values=context._replace_values, has_body=context.body) %}
{%- if context.body %}
{%- set body_type, body, body_models = format_data_with_schema(context.body.value, context.api_request.schema.spec, replace_values=context._replace_values) %}
{%- endif %}
{%- set api_response_type, api_reponse_type_import = get_response_type(context.api_response, version)%}

{%- for package, imports in context._imports.items() %}
{%- for import in imports %}
import {{ package }}.{{ import }};
{%- endfor %}
{%- endfor %}

import com.datadog.api.client.ApiException;
import com.datadog.api.client.ApiClient;
import com.datadog.api.client.{{ version }}.api.{{ context.api_instance.name|camel_case|upperfirst }}Api;
{%- if optional_parameters %}
import com.datadog.api.client.{{ version }}.api.{{ context.api_instance.name|camel_case|upperfirst }}Api.{{ context.api_request.operation_id }}OptionalParameters;
{%- endif %}
{%- if api_reponse_type_import %}
import {{ api_reponse_type_import}};
{%- endif %}
{%- if context.pagination %}
{%- set pagination = operation_spec["x-pagination"] %}
{%- set paginationReturnType = get_pagination_return_item_type(operation_spec, pagination["resultsPath"]) %}
import com.datadog.api.client.{{ version }}.model.{{ paginationReturnType }};
import com.datadog.api.client.PaginationIterable;
{%- endif %}
{%- for model in (parameters_models|list + (body_models or [])|list)|unique|sort %}
import com.datadog.api.client.{{ version }}.model.{{ model }};
{%- endfor %}
import java.io.File;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;

public class Example {
  public static void main(String[] args) {
    ApiClient defaultClient = ApiClient.getDefaultApiClient();
{%- for operation in context._enable_operations %}
    defaultClient.setUnstableOperationEnabled("{{ version }}.{{ operation|camel_case|untitle_case }}", true);
{%- endfor %}
    {{ context.api_instance.name|camel_case|upperfirst }}Api apiInstance = new {{ context.api_instance.name|camel_case|upperfirst }}Api(defaultClient);

{%- for name, values in context._given.items() %}

    // {{ name }}
{%- for value, schema in values.items()|sort %}
{%- if schema.type == 'string' %}
    String {{ value }} = System.getenv("{{ value }}");
{%- elif schema.type == 'integer' %}
    Long {{ value }} = Long.parseLong(System.getenv("{{ value }}"));
{%- elif schema.type == 'boolean' %}
    Boolean {{ value }} = Boolean.parseBoolean((System.getenv("{{ value }}"));
{%- else %}
{{ 1/0 }}
{%- endif %}
{%- endfor %}

{%- endfor %}

{%- if context.body %}

    {{ body_type }} body = {{ body }};
{%- endif %}

{%- if context.pagination %}
{%- set pagination = operation_spec["x-pagination"] %}
{%- set paginationReturnType = get_pagination_return_item_type(operation_spec, pagination["resultsPath"]) %}

    try {
      PaginationIterable<{{ paginationReturnType }}> iterable = apiInstance.{{ context.api_request.operation_id|untitle_case }}WithPagination({% if required_parameters %}{{ required_parameters }}{% endif %}{% if optional_parameters %}{% if required_parameters %}{{ "," }}{% endif %}{{ optional_parameters }}{% endif %});

      for ({{ paginationReturnType }} item : iterable) {
       System.out.println(item);
      }
    } catch (RuntimeException e) {
      System.err.println("Exception when calling {{ context.api_instance.name|camel_case|upperfirst }}Api#{{ context.api_request.operation_id|untitle_case }}WithPagination");
      System.err.println("Reason: " + e.getMessage());
      e.printStackTrace();
    }
{%- else %}

    try {
      {% if api_response_type %}{{api_response_type}} result = {% endif %}apiInstance.{{ context.api_request.operation_id|untitle_case }}({% if required_parameters %}{{ required_parameters }}{% endif %}{% if optional_parameters %}{% if required_parameters %}{{ "," }}{% endif %}{{ optional_parameters }}{% endif %});
      {%- if api_response_type %}
      System.out.println(result);
      {%- endif %}
    } catch (ApiException e) {
      System.err.println("Exception when calling {{ context.api_instance.name|camel_case|upperfirst }}Api#{{ context.api_request.operation_id|untitle_case }}");
      System.err.println("Status code: " + e.getCode());
      System.err.println("Reason: " + e.getResponseBody());
      System.err.println("Response headers: " + e.getResponseHeaders());
      e.printStackTrace();
    }

{%-endif %}
  }
}
