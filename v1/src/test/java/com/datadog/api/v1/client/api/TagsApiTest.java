/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.api;

import com.datadog.api.v1.client.*;
import com.datadog.api.v1.client.auth.*;
import com.datadog.api.v1.client.model.APIErrorResponse;
import com.datadog.api.v1.client.model.HostTags;
import com.datadog.api.v1.client.model.TagToHosts;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TagsApi
 */
public class TagsApiTest {

    private final TagsApi api = new TagsApi();

    /**
     * Add tags to a host
     *
     * This endpoint allows you to add new tags to a host, optionally specifying where these tags come from.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createHostTagsTest() throws ApiException {
        //String hostName = null;
        //HostTags body = null;
        //String source = null;
        //HostTags response = api.createHostTags(hostName)
        //        .body(body)
        //        .source(source)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Remove host tags
     *
     * This endpoint allows you to remove all user-assigned tags for a single host.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteHostTagsTest() throws ApiException {
        //String hostName = null;
        //String source = null;
        //api.deleteHostTags(hostName)
        //        .source(source)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get host tags
     *
     * Return the list of tags that apply to a given host.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getHostTagsTest() throws ApiException {
        //String hostName = null;
        //String source = null;
        //HostTags response = api.getHostTags(hostName)
        //        .source(source)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get Tags
     *
     * Return a mapping of tags to hosts for your whole infrastructure.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listHostTagsTest() throws ApiException {
        //String source = null;
        //TagToHosts response = api.listHostTags()
        //        .source(source)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Update host tags
     *
     * This endpoint allows you to update/replace all tags in an integration source with those supplied in the request.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateHostTagsTest() throws ApiException {
        //String hostName = null;
        //HostTags body = null;
        //String source = null;
        //HostTags response = api.updateHostTags(hostName)
        //        .body(body)
        //        .source(source)
        //        .execute();
        // TODO: test validations
    }

}
