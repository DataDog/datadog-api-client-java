/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.api;

import com.datadog.api.v1.client.*;
import com.datadog.api.v1.client.auth.*;
import com.datadog.api.v1.client.model.APIErrorResponse;
import com.datadog.api.v1.client.model.EventCreateRequest;
import com.datadog.api.v1.client.model.EventCreateResponse;
import com.datadog.api.v1.client.model.EventListResponse;
import com.datadog.api.v1.client.model.EventPriority;
import com.datadog.api.v1.client.model.EventResponse;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for EventsApi
 */
public class EventsApiTest {

    private final EventsApi api = new EventsApi();

    /**
     * Post an event
     *
     * This endpoint allows you to post events to the stream. Tag them, set priority and event aggregate them with other events.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createEventTest() throws ApiException {
        //EventCreateRequest body = null;
        //EventCreateResponse response = api.createEvent()
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get an event
     *
     * This endpoint allows you to query for event details.  **Note**: If the event you’re querying contains markdown formatting of any kind, you may see characters such as &#x60;%&#x60;,&#x60;\\&#x60;,&#x60;n&#x60; in your output.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getEventTest() throws ApiException {
        //Long eventId = null;
        //EventResponse response = api.getEvent(eventId)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Query the event stream
     *
     * The event stream can be queried and filtered by time, priority, sources and tags.  **Notes**: - If the event you’re querying contains markdown formatting of any kind, you may see characters such as &#x60;%&#x60;,&#x60;\\&#x60;,&#x60;n&#x60; in your output.  - This endpoint returns a maximum of &#x60;1000&#x60; most recent results. To return additional results, identify the last timestamp of the last result and set that as the &#x60;end&#x60; query time to paginate the results. You can also use the page parameter to specify which set of &#x60;1000&#x60; results to return.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listEventsTest() throws ApiException {
        //Long start = null;
        //Long end = null;
        //EventPriority priority = null;
        //String sources = null;
        //String tags = null;
        //Boolean unaggregated = null;
        //Boolean excludeAggregate = null;
        //Integer page = null;
        //EventListResponse response = api.listEvents()
        //        .start(start)
        //        .end(end)
        //        .priority(priority)
        //        .sources(sources)
        //        .tags(tags)
        //        .unaggregated(unaggregated)
        //        .excludeAggregate(excludeAggregate)
        //        .page(page)
        //        .execute();
        // TODO: test validations
    }

}
