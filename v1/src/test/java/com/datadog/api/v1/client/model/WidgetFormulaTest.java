/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.model;

import com.datadog.api.v1.client.model.TableWidgetCellDisplayMode;
import com.datadog.api.v1.client.model.WidgetConditionalFormat;
import com.datadog.api.v1.client.model.WidgetFormulaLimit;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for WidgetFormula
 */
public class WidgetFormulaTest {
    private final WidgetFormula model = new WidgetFormula();

    /**
     * Model tests for WidgetFormula
     */
    @Test
    public void testWidgetFormula() {
        // TODO: test WidgetFormula
    }

    /**
     * Test the property 'alias'
     */
    @Test
    public void aliasTest() {
        // TODO: test alias
    }

    /**
     * Test the property 'cellDisplayMode'
     */
    @Test
    public void cellDisplayModeTest() {
        // TODO: test cellDisplayMode
    }

    /**
     * Test the property 'conditionalFormats'
     */
    @Test
    public void conditionalFormatsTest() {
        // TODO: test conditionalFormats
    }

    /**
     * Test the property 'formula'
     */
    @Test
    public void formulaTest() {
        // TODO: test formula
    }

    /**
     * Test the property 'limit'
     */
    @Test
    public void limitTest() {
        // TODO: test limit
    }

}
