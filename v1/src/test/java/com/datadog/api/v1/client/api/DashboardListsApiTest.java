/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.api;

import com.datadog.api.v1.client.*;
import com.datadog.api.v1.client.auth.*;
import com.datadog.api.v1.client.model.APIErrorResponse;
import com.datadog.api.v1.client.model.DashboardList;
import com.datadog.api.v1.client.model.DashboardListDeleteResponse;
import com.datadog.api.v1.client.model.DashboardListListResponse;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DashboardListsApi
 */
public class DashboardListsApiTest {

    private final DashboardListsApi api = new DashboardListsApi();

    /**
     * Create a dashboard list
     *
     * Create an empty dashboard list.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDashboardListTest() throws ApiException {
        //DashboardList body = null;
        //DashboardList response = api.createDashboardList()
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Delete a dashboard list
     *
     * Delete a dashboard list.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDashboardListTest() throws ApiException {
        //Long listId = null;
        //DashboardListDeleteResponse response = api.deleteDashboardList(listId)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get a dashboard list
     *
     * Fetch an existing dashboard list&#39;s definition.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDashboardListTest() throws ApiException {
        //Long listId = null;
        //DashboardList response = api.getDashboardList(listId)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get all dashboard lists
     *
     * Fetch all of your existing dashboard list definitions.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listDashboardListsTest() throws ApiException {
        //DashboardListListResponse response = api.listDashboardLists()
        //        .execute();
        // TODO: test validations
    }

    /**
     * Update a dashboard list
     *
     * Update the name of a dashboard list.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateDashboardListTest() throws ApiException {
        //Long listId = null;
        //DashboardList body = null;
        //DashboardList response = api.updateDashboardList(listId)
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

}
