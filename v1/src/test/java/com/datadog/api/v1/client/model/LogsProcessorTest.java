/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.model;

import com.datadog.api.v1.client.model.LogsArithmeticProcessor;
import com.datadog.api.v1.client.model.LogsAttributeRemapper;
import com.datadog.api.v1.client.model.LogsCategoryProcessor;
import com.datadog.api.v1.client.model.LogsCategoryProcessorCategory;
import com.datadog.api.v1.client.model.LogsDateRemapper;
import com.datadog.api.v1.client.model.LogsFilter;
import com.datadog.api.v1.client.model.LogsGeoIPParser;
import com.datadog.api.v1.client.model.LogsGrokParser;
import com.datadog.api.v1.client.model.LogsGrokParserRules;
import com.datadog.api.v1.client.model.LogsLookupProcessor;
import com.datadog.api.v1.client.model.LogsMessageRemapper;
import com.datadog.api.v1.client.model.LogsPipelineProcessor;
import com.datadog.api.v1.client.model.LogsServiceRemapper;
import com.datadog.api.v1.client.model.LogsStatusRemapper;
import com.datadog.api.v1.client.model.LogsStringBuilderProcessor;
import com.datadog.api.v1.client.model.LogsTraceRemapper;
import com.datadog.api.v1.client.model.LogsTraceRemapperType;
import com.datadog.api.v1.client.model.LogsURLParser;
import com.datadog.api.v1.client.model.LogsUserAgentParser;
import com.datadog.api.v1.client.model.TargetFormatType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;
import com.fasterxml.jackson.annotation.JsonIgnore;
import org.openapitools.jackson.nullable.JsonNullable;
import java.util.NoSuchElementException;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for LogsProcessor
 */
public class LogsProcessorTest {
    private final LogsProcessor model = new LogsProcessor();

    /**
     * Model tests for LogsProcessor
     */
    @Test
    public void testLogsProcessor() {
        // TODO: test LogsProcessor
    }

    /**
     * Test the property 'grok'
     */
    @Test
    public void grokTest() {
        // TODO: test grok
    }

    /**
     * Test the property 'isEnabled'
     */
    @Test
    public void isEnabledTest() {
        // TODO: test isEnabled
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'samples'
     */
    @Test
    public void samplesTest() {
        // TODO: test samples
    }

    /**
     * Test the property 'source'
     */
    @Test
    public void sourceTest() {
        // TODO: test source
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'sources'
     */
    @Test
    public void sourcesTest() {
        // TODO: test sources
    }

    /**
     * Test the property 'overrideOnConflict'
     */
    @Test
    public void overrideOnConflictTest() {
        // TODO: test overrideOnConflict
    }

    /**
     * Test the property 'preserveSource'
     */
    @Test
    public void preserveSourceTest() {
        // TODO: test preserveSource
    }

    /**
     * Test the property 'sourceType'
     */
    @Test
    public void sourceTypeTest() {
        // TODO: test sourceType
    }

    /**
     * Test the property 'target'
     */
    @Test
    public void targetTest() {
        // TODO: test target
    }

    /**
     * Test the property 'targetFormat'
     */
    @Test
    public void targetFormatTest() {
        // TODO: test targetFormat
    }

    /**
     * Test the property 'targetType'
     */
    @Test
    public void targetTypeTest() {
        // TODO: test targetType
    }

    /**
     * Test the property 'normalizeEndingSlashes'
     */
    @Test
    public void normalizeEndingSlashesTest() {
        // TODO: test normalizeEndingSlashes
    }

    /**
     * Test the property 'isEncoded'
     */
    @Test
    public void isEncodedTest() {
        // TODO: test isEncoded
    }

    /**
     * Test the property 'categories'
     */
    @Test
    public void categoriesTest() {
        // TODO: test categories
    }

    /**
     * Test the property 'expression'
     */
    @Test
    public void expressionTest() {
        // TODO: test expression
    }

    /**
     * Test the property 'isReplaceMissing'
     */
    @Test
    public void isReplaceMissingTest() {
        // TODO: test isReplaceMissing
    }

    /**
     * Test the property 'template'
     */
    @Test
    public void templateTest() {
        // TODO: test template
    }

    /**
     * Test the property 'filter'
     */
    @Test
    public void filterTest() {
        // TODO: test filter
    }

    /**
     * Test the property 'processors'
     */
    @Test
    public void processorsTest() {
        // TODO: test processors
    }

    /**
     * Test the property 'defaultLookup'
     */
    @Test
    public void defaultLookupTest() {
        // TODO: test defaultLookup
    }

    /**
     * Test the property 'lookupTable'
     */
    @Test
    public void lookupTableTest() {
        // TODO: test lookupTable
    }

}
