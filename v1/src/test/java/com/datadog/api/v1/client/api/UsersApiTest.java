/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.api;

import com.datadog.api.v1.client.*;
import com.datadog.api.v1.client.auth.*;
import com.datadog.api.v1.client.model.APIErrorResponse;
import com.datadog.api.v1.client.model.User;
import com.datadog.api.v1.client.model.UserDisableResponse;
import com.datadog.api.v1.client.model.UserListResponse;
import com.datadog.api.v1.client.model.UserResponse;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UsersApi
 */
public class UsersApiTest {

    private final UsersApi api = new UsersApi();

    /**
     * Create a user
     *
     * Create a user for your organization.  **Note**: Users can only be created with the admin access role if application keys belong to administrators.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUserTest() throws ApiException {
        //User body = null;
        //UserResponse response = api.createUser()
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Disable a user
     *
     * Delete a user from an organization.  **Note**: This endpoint can only be used with application keys belonging to administrators.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void disableUserTest() throws ApiException {
        //String userHandle = null;
        //UserDisableResponse response = api.disableUser(userHandle)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get user details
     *
     * Get a user&#39;s details.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUserTest() throws ApiException {
        //String userHandle = null;
        //UserResponse response = api.getUser(userHandle)
        //        .execute();
        // TODO: test validations
    }

    /**
     * List all users
     *
     * List all users for your organization.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listUsersTest() throws ApiException {
        //UserListResponse response = api.listUsers()
        //        .execute();
        // TODO: test validations
    }

    /**
     * Update a user
     *
     * Update a user information.  **Note**: It can only be used with application keys belonging to administrators.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateUserTest() throws ApiException {
        //String userHandle = null;
        //User body = null;
        //UserResponse response = api.updateUser(userHandle)
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

}
