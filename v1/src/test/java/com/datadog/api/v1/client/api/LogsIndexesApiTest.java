/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.api;

import com.datadog.api.v1.client.*;
import com.datadog.api.v1.client.auth.*;
import com.datadog.api.v1.client.model.APIErrorResponse;
import com.datadog.api.v1.client.model.LogsAPIErrorResponse;
import com.datadog.api.v1.client.model.LogsIndex;
import com.datadog.api.v1.client.model.LogsIndexListResponse;
import com.datadog.api.v1.client.model.LogsIndexUpdateRequest;
import com.datadog.api.v1.client.model.LogsIndexesOrder;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LogsIndexesApi
 */
public class LogsIndexesApiTest {

    private final LogsIndexesApi api = new LogsIndexesApi();

    /**
     * Create an index
     *
     * Creates a new index. Returns the Index object passed in the request body when the request is successful.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createLogsIndexTest() throws ApiException {
        //LogsIndex body = null;
        //LogsIndex response = api.createLogsIndex()
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get an index
     *
     * Get one log index from your organization. This endpoint takes no JSON arguments.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLogsIndexTest() throws ApiException {
        //String name = null;
        //LogsIndex response = api.getLogsIndex(name)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get indexes order
     *
     * Get the current order of your log indexes. This endpoint takes no JSON arguments.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getLogsIndexOrderTest() throws ApiException {
        //LogsIndexesOrder response = api.getLogsIndexOrder()
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get all indexes
     *
     * The Index object describes the configuration of a log index. This endpoint returns an array of the &#x60;LogIndex&#x60; objects of your organization.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listLogIndexesTest() throws ApiException {
        //LogsIndexListResponse response = api.listLogIndexes()
        //        .execute();
        // TODO: test validations
    }

    /**
     * Update an index
     *
     * Update an index as identified by its name. Returns the Index object passed in the request body when the request is successful.  Using the &#x60;PUT&#x60; method updates your indexâ€™s configuration by **replacing** your current configuration with the new one sent to your Datadog organization.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLogsIndexTest() throws ApiException {
        //String name = null;
        //LogsIndexUpdateRequest body = null;
        //LogsIndex response = api.updateLogsIndex(name)
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Update indexes order
     *
     * This endpoint updates the index order of your organization. It returns the index order object passed in the request body when the request is successful.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateLogsIndexOrderTest() throws ApiException {
        //LogsIndexesOrder body = null;
        //LogsIndexesOrder response = api.updateLogsIndexOrder()
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

}
