/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.datadog.api.v1.client.model.FormulaAndFunctionMetricAggregation;
import com.datadog.api.v1.client.model.FormulaAndFunctionProcessQueryDataSource;
import com.datadog.api.v1.client.model.QuerySortOrder;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.datadog.api.v1.client.JSON;


/**
 * Process query using formulas and functions.
 */
@ApiModel(description = "Process query using formulas and functions.")
@JsonPropertyOrder({
  TimeSeriesFormulaAndFunctionProcessQueryDefinition.JSON_PROPERTY_AGGREGATOR,
  TimeSeriesFormulaAndFunctionProcessQueryDefinition.JSON_PROPERTY_DATA_SOURCE,
  TimeSeriesFormulaAndFunctionProcessQueryDefinition.JSON_PROPERTY_IS_NORMALIZED_CPU,
  TimeSeriesFormulaAndFunctionProcessQueryDefinition.JSON_PROPERTY_LIMIT,
  TimeSeriesFormulaAndFunctionProcessQueryDefinition.JSON_PROPERTY_METRIC,
  TimeSeriesFormulaAndFunctionProcessQueryDefinition.JSON_PROPERTY_NAME,
  TimeSeriesFormulaAndFunctionProcessQueryDefinition.JSON_PROPERTY_SORT,
  TimeSeriesFormulaAndFunctionProcessQueryDefinition.JSON_PROPERTY_TAG_FILTERS,
  TimeSeriesFormulaAndFunctionProcessQueryDefinition.JSON_PROPERTY_TEXT_FILTER
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class TimeSeriesFormulaAndFunctionProcessQueryDefinition {
  public static final String JSON_PROPERTY_AGGREGATOR = "aggregator";
  private FormulaAndFunctionMetricAggregation aggregator;

  public static final String JSON_PROPERTY_DATA_SOURCE = "data_source";
  private FormulaAndFunctionProcessQueryDataSource dataSource;

  public static final String JSON_PROPERTY_IS_NORMALIZED_CPU = "is_normalized_cpu";
  private Boolean isNormalizedCpu;

  public static final String JSON_PROPERTY_LIMIT = "limit";
  private Long limit;

  public static final String JSON_PROPERTY_METRIC = "metric";
  private String metric;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  public static final String JSON_PROPERTY_SORT = "sort";
  private QuerySortOrder sort = QuerySortOrder.DESC;

  public static final String JSON_PROPERTY_TAG_FILTERS = "tag_filters";
  private List<String> tagFilters = null;

  public static final String JSON_PROPERTY_TEXT_FILTER = "text_filter";
  private String textFilter;


  public TimeSeriesFormulaAndFunctionProcessQueryDefinition aggregator(FormulaAndFunctionMetricAggregation aggregator) {
    this.aggregator = aggregator;
    return this;
  }

   /**
   * Get aggregator
   * @return aggregator
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_AGGREGATOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public FormulaAndFunctionMetricAggregation getAggregator() {
    return aggregator;
  }


  public void setAggregator(FormulaAndFunctionMetricAggregation aggregator) {
    this.aggregator = aggregator;
  }


  public TimeSeriesFormulaAndFunctionProcessQueryDefinition dataSource(FormulaAndFunctionProcessQueryDataSource dataSource) {
    this.dataSource = dataSource;
    return this;
  }

   /**
   * Get dataSource
   * @return dataSource
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_DATA_SOURCE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public FormulaAndFunctionProcessQueryDataSource getDataSource() {
    return dataSource;
  }


  public void setDataSource(FormulaAndFunctionProcessQueryDataSource dataSource) {
    this.dataSource = dataSource;
  }


  public TimeSeriesFormulaAndFunctionProcessQueryDefinition isNormalizedCpu(Boolean isNormalizedCpu) {
    this.isNormalizedCpu = isNormalizedCpu;
    return this;
  }

   /**
   * Whether to normalize the CPU percentages.
   * @return isNormalizedCpu
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Whether to normalize the CPU percentages.")
  @JsonProperty(JSON_PROPERTY_IS_NORMALIZED_CPU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsNormalizedCpu() {
    return isNormalizedCpu;
  }


  public void setIsNormalizedCpu(Boolean isNormalizedCpu) {
    this.isNormalizedCpu = isNormalizedCpu;
  }


  public TimeSeriesFormulaAndFunctionProcessQueryDefinition limit(Long limit) {
    this.limit = limit;
    return this;
  }

   /**
   * Number of hits to return.
   * @return limit
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Number of hits to return.")
  @JsonProperty(JSON_PROPERTY_LIMIT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getLimit() {
    return limit;
  }


  public void setLimit(Long limit) {
    this.limit = limit;
  }


  public TimeSeriesFormulaAndFunctionProcessQueryDefinition metric(String metric) {
    this.metric = metric;
    return this;
  }

   /**
   * Process metric name.
   * @return metric
  **/
  @ApiModelProperty(example = "avg:system.cpu.user{*}", required = true, value = "Process metric name.")
  @JsonProperty(JSON_PROPERTY_METRIC)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getMetric() {
    return metric;
  }


  public void setMetric(String metric) {
    this.metric = metric;
  }


  public TimeSeriesFormulaAndFunctionProcessQueryDefinition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of query for use in formulas.
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of query for use in formulas.")
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public TimeSeriesFormulaAndFunctionProcessQueryDefinition sort(QuerySortOrder sort) {
    this.sort = sort;
    return this;
  }

   /**
   * Get sort
   * @return sort
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_SORT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public QuerySortOrder getSort() {
    return sort;
  }


  public void setSort(QuerySortOrder sort) {
    this.sort = sort;
  }


  public TimeSeriesFormulaAndFunctionProcessQueryDefinition tagFilters(List<String> tagFilters) {
    this.tagFilters = tagFilters;
    return this;
  }

  public TimeSeriesFormulaAndFunctionProcessQueryDefinition addTagFiltersItem(String tagFiltersItem) {
    if (this.tagFilters == null) {
      this.tagFilters = new ArrayList<>();
    }
    this.tagFilters.add(tagFiltersItem);
    return this;
  }

   /**
   * An array of tags to filter by.
   * @return tagFilters
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of tags to filter by.")
  @JsonProperty(JSON_PROPERTY_TAG_FILTERS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getTagFilters() {
    return tagFilters;
  }


  public void setTagFilters(List<String> tagFilters) {
    this.tagFilters = tagFilters;
  }


  public TimeSeriesFormulaAndFunctionProcessQueryDefinition textFilter(String textFilter) {
    this.textFilter = textFilter;
    return this;
  }

   /**
   * Text to use as filter.
   * @return textFilter
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Text to use as filter.")
  @JsonProperty(JSON_PROPERTY_TEXT_FILTER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTextFilter() {
    return textFilter;
  }


  public void setTextFilter(String textFilter) {
    this.textFilter = textFilter;
  }


  /**
   * Return true if this TimeSeriesFormulaAndFunctionProcessQueryDefinition object is equal to o.
   */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    TimeSeriesFormulaAndFunctionProcessQueryDefinition timeSeriesFormulaAndFunctionProcessQueryDefinition = (TimeSeriesFormulaAndFunctionProcessQueryDefinition) o;
    return Objects.equals(this.aggregator, timeSeriesFormulaAndFunctionProcessQueryDefinition.aggregator) &&
        Objects.equals(this.dataSource, timeSeriesFormulaAndFunctionProcessQueryDefinition.dataSource) &&
        Objects.equals(this.isNormalizedCpu, timeSeriesFormulaAndFunctionProcessQueryDefinition.isNormalizedCpu) &&
        Objects.equals(this.limit, timeSeriesFormulaAndFunctionProcessQueryDefinition.limit) &&
        Objects.equals(this.metric, timeSeriesFormulaAndFunctionProcessQueryDefinition.metric) &&
        Objects.equals(this.name, timeSeriesFormulaAndFunctionProcessQueryDefinition.name) &&
        Objects.equals(this.sort, timeSeriesFormulaAndFunctionProcessQueryDefinition.sort) &&
        Objects.equals(this.tagFilters, timeSeriesFormulaAndFunctionProcessQueryDefinition.tagFilters) &&
        Objects.equals(this.textFilter, timeSeriesFormulaAndFunctionProcessQueryDefinition.textFilter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(aggregator, dataSource, isNormalizedCpu, limit, metric, name, sort, tagFilters, textFilter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class TimeSeriesFormulaAndFunctionProcessQueryDefinition {\n");
    sb.append("    aggregator: ").append(toIndentedString(aggregator)).append("\n");
    sb.append("    dataSource: ").append(toIndentedString(dataSource)).append("\n");
    sb.append("    isNormalizedCpu: ").append(toIndentedString(isNormalizedCpu)).append("\n");
    sb.append("    limit: ").append(toIndentedString(limit)).append("\n");
    sb.append("    metric: ").append(toIndentedString(metric)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    sort: ").append(toIndentedString(sort)).append("\n");
    sb.append("    tagFilters: ").append(toIndentedString(tagFilters)).append("\n");
    sb.append("    textFilter: ").append(toIndentedString(textFilter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

