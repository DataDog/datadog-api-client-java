/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * HTTPLog
 */
@JsonPropertyOrder({
  HTTPLog.JSON_PROPERTY_DDSOURCE,
  HTTPLog.JSON_PROPERTY_DDTAGS,
  HTTPLog.JSON_PROPERTY_HOSTNAME,
  HTTPLog.JSON_PROPERTY_MESSAGE
})

public class HTTPLog {
  public static final String JSON_PROPERTY_DDSOURCE = "ddsource";
  private String ddsource;

  public static final String JSON_PROPERTY_DDTAGS = "ddtags";
  private String ddtags;

  public static final String JSON_PROPERTY_HOSTNAME = "hostname";
  private String hostname;

  public static final String JSON_PROPERTY_MESSAGE = "message";
  private String message;


  public HTTPLog ddsource(String ddsource) {
    
    this.ddsource = ddsource;
    return this;
  }

   /**
   * TODO.
   * @return ddsource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "python", value = "TODO.")
  @JsonProperty(JSON_PROPERTY_DDSOURCE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDdsource() {
    return ddsource;
  }


  public void setDdsource(String ddsource) {
    this.ddsource = ddsource;
  }


  public HTTPLog ddtags(String ddtags) {
    
    this.ddtags = ddtags;
    return this;
  }

   /**
   * TODO.
   * @return ddtags
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "env:staging,service:payment", value = "TODO.")
  @JsonProperty(JSON_PROPERTY_DDTAGS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDdtags() {
    return ddtags;
  }


  public void setDdtags(String ddtags) {
    this.ddtags = ddtags;
  }


  public HTTPLog hostname(String hostname) {
    
    this.hostname = hostname;
    return this;
  }

   /**
   * TODO.
   * @return hostname
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "i-012345678", value = "TODO.")
  @JsonProperty(JSON_PROPERTY_HOSTNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getHostname() {
    return hostname;
  }


  public void setHostname(String hostname) {
    this.hostname = hostname;
  }


  public HTTPLog message(String message) {
    
    this.message = message;
    return this;
  }

   /**
   * TODO.
   * @return message
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "2019-11-19T14:37:58,995 INFO [process.name][20081] Hello World", value = "TODO.")
  @JsonProperty(JSON_PROPERTY_MESSAGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMessage() {
    return message;
  }


  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    HTTPLog htTPLog = (HTTPLog) o;
    return Objects.equals(this.ddsource, htTPLog.ddsource) &&
        Objects.equals(this.ddtags, htTPLog.ddtags) &&
        Objects.equals(this.hostname, htTPLog.hostname) &&
        Objects.equals(this.message, htTPLog.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ddsource, ddtags, hostname, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class HTTPLog {\n");
    sb.append("    ddsource: ").append(toIndentedString(ddsource)).append("\n");
    sb.append("    ddtags: ").append(toIndentedString(ddtags)).append("\n");
    sb.append("    hostname: ").append(toIndentedString(hostname)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

