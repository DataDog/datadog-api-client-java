/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.model;

import java.util.Objects;
import java.util.Arrays;
import java.util.Map;
import java.util.HashMap;
import com.datadog.api.v1.client.model.SyntheticsAssertionOperator;
import com.datadog.api.v1.client.model.SyntheticsAssertionType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.datadog.api.v1.client.JSON;


/**
 * Object describing the assertions type, their associated operator, which property they apply , and upon which target.
 */
@ApiModel(description = "Object describing the assertions type, their associated operator, which property they apply , and upon which target.")
@JsonPropertyOrder({
  SyntheticsAssertion.JSON_PROPERTY_OPERATOR,
  SyntheticsAssertion.JSON_PROPERTY_PROPERTY,
  SyntheticsAssertion.JSON_PROPERTY_TARGET,
  SyntheticsAssertion.JSON_PROPERTY_TYPE
})

public class SyntheticsAssertion {
  public static final String JSON_PROPERTY_OPERATOR = "operator";
  private SyntheticsAssertionOperator operator;

  public static final String JSON_PROPERTY_PROPERTY = "property";
  private String property;

  public static final String JSON_PROPERTY_TARGET = "target";
  private Object target;

  public static final String JSON_PROPERTY_TYPE = "type";
  private SyntheticsAssertionType type;


  public SyntheticsAssertion operator(SyntheticsAssertionOperator operator) {
    this.operator = operator;
    return this;
  }

   /**
   * Get operator
   * @return operator
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_OPERATOR)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SyntheticsAssertionOperator getOperator() {
    return operator;
  }


  public void setOperator(SyntheticsAssertionOperator operator) {
    this.operator = operator;
  }


  public SyntheticsAssertion property(String property) {
    this.property = property;
    return this;
  }

   /**
   * The associated assertion property.
   * @return property
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The associated assertion property.")
  @JsonProperty(JSON_PROPERTY_PROPERTY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getProperty() {
    return property;
  }


  public void setProperty(String property) {
    this.property = property;
  }


  public SyntheticsAssertion target(Object target) {
    this.target = target;
    return this;
  }

   /**
   * Target to apply the assertion to. It can be a string, a number, or a Date.
   * @return target
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Target to apply the assertion to. It can be a string, a number, or a Date.")
  @JsonProperty(JSON_PROPERTY_TARGET)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Object getTarget() {
    return target;
  }


  public void setTarget(Object target) {
    this.target = target;
  }


  public SyntheticsAssertion type(SyntheticsAssertionType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SyntheticsAssertionType getType() {
    return type;
  }


  public void setType(SyntheticsAssertionType type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SyntheticsAssertion syntheticsAssertion = (SyntheticsAssertion) o;
    return Objects.equals(this.operator, syntheticsAssertion.operator) &&
        Objects.equals(this.property, syntheticsAssertion.property) &&
        Objects.equals(this.target, syntheticsAssertion.target) &&
        Objects.equals(this.type, syntheticsAssertion.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operator, property, target, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SyntheticsAssertion {\n");
    sb.append("    operator: ").append(toIndentedString(operator)).append("\n");
    sb.append("    property: ").append(toIndentedString(property)).append("\n");
    sb.append("    target: ").append(toIndentedString(target)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

