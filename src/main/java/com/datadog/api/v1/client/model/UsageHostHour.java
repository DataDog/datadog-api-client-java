/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * UsageHostHour
 */
@JsonPropertyOrder({
  UsageHostHour.JSON_PROPERTY_AGENT_HOST_COUNT,
  UsageHostHour.JSON_PROPERTY_APM_HOST_COUNT,
  UsageHostHour.JSON_PROPERTY_AWS_HOST_COUNT,
  UsageHostHour.JSON_PROPERTY_CONTAINER_COUNT,
  UsageHostHour.JSON_PROPERTY_GCP_HOST_COUNT,
  UsageHostHour.JSON_PROPERTY_HOST_COUNT,
  UsageHostHour.JSON_PROPERTY_HOUR
})

public class UsageHostHour {
  public static final String JSON_PROPERTY_AGENT_HOST_COUNT = "agent_host_count";
  private Long agentHostCount;

  public static final String JSON_PROPERTY_APM_HOST_COUNT = "apm_host_count";
  private Long apmHostCount;

  public static final String JSON_PROPERTY_AWS_HOST_COUNT = "aws_host_count";
  private Long awsHostCount;

  public static final String JSON_PROPERTY_CONTAINER_COUNT = "container_count";
  private Long containerCount;

  public static final String JSON_PROPERTY_GCP_HOST_COUNT = "gcp_host_count";
  private Long gcpHostCount;

  public static final String JSON_PROPERTY_HOST_COUNT = "host_count";
  private Long hostCount;

  public static final String JSON_PROPERTY_HOUR = "hour";
  private OffsetDateTime hour;


  public UsageHostHour agentHostCount(Long agentHostCount) {
    
    this.agentHostCount = agentHostCount;
    return this;
  }

   /**
   * Contains the total number of infrastructure hosts reporting during a given hour that were running the Datadog Agent.
   * @return agentHostCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contains the total number of infrastructure hosts reporting during a given hour that were running the Datadog Agent.")
  @JsonProperty(JSON_PROPERTY_AGENT_HOST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getAgentHostCount() {
    return agentHostCount;
  }


  public void setAgentHostCount(Long agentHostCount) {
    this.agentHostCount = agentHostCount;
  }


  public UsageHostHour apmHostCount(Long apmHostCount) {
    
    this.apmHostCount = apmHostCount;
    return this;
  }

   /**
   * Shows the total number of hosts using APM during the hour, these are counted as billable (except during trial periods).
   * @return apmHostCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shows the total number of hosts using APM during the hour, these are counted as billable (except during trial periods).")
  @JsonProperty(JSON_PROPERTY_APM_HOST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getApmHostCount() {
    return apmHostCount;
  }


  public void setApmHostCount(Long apmHostCount) {
    this.apmHostCount = apmHostCount;
  }


  public UsageHostHour awsHostCount(Long awsHostCount) {
    
    this.awsHostCount = awsHostCount;
    return this;
  }

   /**
   * Contains the total number of hosts that reported via the AWS integration (and were NOT running the Datadog Agent). When AWS or GCP hosts are also running the Datadog Agent, they are counted as Agent hosts, NOT as AWS or GCP.
   * @return awsHostCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contains the total number of hosts that reported via the AWS integration (and were NOT running the Datadog Agent). When AWS or GCP hosts are also running the Datadog Agent, they are counted as Agent hosts, NOT as AWS or GCP.")
  @JsonProperty(JSON_PROPERTY_AWS_HOST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getAwsHostCount() {
    return awsHostCount;
  }


  public void setAwsHostCount(Long awsHostCount) {
    this.awsHostCount = awsHostCount;
  }


  public UsageHostHour containerCount(Long containerCount) {
    
    this.containerCount = containerCount;
    return this;
  }

   /**
   * Contains the total number of billable infrastructure hosts reporting during a given hour. This is the sum of &#x60;agent_host_count&#x60;, &#x60;aws_host_count&#x60;, and &#x60;gcp_host_count&#x60;.
   * @return containerCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contains the total number of billable infrastructure hosts reporting during a given hour. This is the sum of `agent_host_count`, `aws_host_count`, and `gcp_host_count`.")
  @JsonProperty(JSON_PROPERTY_CONTAINER_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getContainerCount() {
    return containerCount;
  }


  public void setContainerCount(Long containerCount) {
    this.containerCount = containerCount;
  }


  public UsageHostHour gcpHostCount(Long gcpHostCount) {
    
    this.gcpHostCount = gcpHostCount;
    return this;
  }

   /**
   * Contains the total number of hosts that reported via the Google Cloud integration (and were NOT running the Datadog Agent).
   * @return gcpHostCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Contains the total number of hosts that reported via the Google Cloud integration (and were NOT running the Datadog Agent).")
  @JsonProperty(JSON_PROPERTY_GCP_HOST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getGcpHostCount() {
    return gcpHostCount;
  }


  public void setGcpHostCount(Long gcpHostCount) {
    this.gcpHostCount = gcpHostCount;
  }


  public UsageHostHour hostCount(Long hostCount) {
    
    this.hostCount = hostCount;
    return this;
  }

   /**
   * Shows the total number of containers reporting via the Docker integration during the hour.
   * @return hostCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Shows the total number of containers reporting via the Docker integration during the hour.")
  @JsonProperty(JSON_PROPERTY_HOST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getHostCount() {
    return hostCount;
  }


  public void setHostCount(Long hostCount) {
    this.hostCount = hostCount;
  }


  public UsageHostHour hour(OffsetDateTime hour) {
    
    this.hour = hour;
    return this;
  }

   /**
   * The hour for the usage.
   * @return hour
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The hour for the usage.")
  @JsonProperty(JSON_PROPERTY_HOUR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getHour() {
    return hour;
  }


  public void setHour(OffsetDateTime hour) {
    this.hour = hour;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsageHostHour usageHostHour = (UsageHostHour) o;
    return Objects.equals(this.agentHostCount, usageHostHour.agentHostCount) &&
        Objects.equals(this.apmHostCount, usageHostHour.apmHostCount) &&
        Objects.equals(this.awsHostCount, usageHostHour.awsHostCount) &&
        Objects.equals(this.containerCount, usageHostHour.containerCount) &&
        Objects.equals(this.gcpHostCount, usageHostHour.gcpHostCount) &&
        Objects.equals(this.hostCount, usageHostHour.hostCount) &&
        Objects.equals(this.hour, usageHostHour.hour);
  }

  @Override
  public int hashCode() {
    return Objects.hash(agentHostCount, apmHostCount, awsHostCount, containerCount, gcpHostCount, hostCount, hour);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsageHostHour {\n");
    sb.append("    agentHostCount: ").append(toIndentedString(agentHostCount)).append("\n");
    sb.append("    apmHostCount: ").append(toIndentedString(apmHostCount)).append("\n");
    sb.append("    awsHostCount: ").append(toIndentedString(awsHostCount)).append("\n");
    sb.append("    containerCount: ").append(toIndentedString(containerCount)).append("\n");
    sb.append("    gcpHostCount: ").append(toIndentedString(gcpHostCount)).append("\n");
    sb.append("    hostCount: ").append(toIndentedString(hostCount)).append("\n");
    sb.append("    hour: ").append(toIndentedString(hour)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

