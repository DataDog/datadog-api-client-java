/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.datadog.api.v1.client.model;

import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;
import java.util.Objects;

/** Compliance Monitoring usage for a given organization for a given hour. */
@ApiModel(description = "Compliance Monitoring usage for a given organization for a given hour.")
@JsonPropertyOrder({
  UsageComplianceHour.JSON_PROPERTY_COMPLIANCE_CONTAINER_COUNT,
  UsageComplianceHour.JSON_PROPERTY_COMPLIANCE_HOST_COUNT,
  UsageComplianceHour.JSON_PROPERTY_HOUR
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class UsageComplianceHour {
  public static final String JSON_PROPERTY_COMPLIANCE_CONTAINER_COUNT =
      "compliance_container_count";
  private Long complianceContainerCount;

  public static final String JSON_PROPERTY_COMPLIANCE_HOST_COUNT = "compliance_host_count";
  private Long complianceHostCount;

  public static final String JSON_PROPERTY_HOUR = "hour";
  private OffsetDateTime hour;

  public UsageComplianceHour complianceContainerCount(Long complianceContainerCount) {
    this.complianceContainerCount = complianceContainerCount;
    return this;
  }

  /**
   * The total number of compliance container hours from the start of the given hour&#39;s month
   * until the given hour.
   *
   * @return complianceContainerCount
   */
  @javax.annotation.Nullable
  @ApiModelProperty(
      value =
          "The total number of compliance container hours from the start of the given hour's month"
              + " until the given hour.")
  @JsonProperty(JSON_PROPERTY_COMPLIANCE_CONTAINER_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getComplianceContainerCount() {
    return complianceContainerCount;
  }

  public void setComplianceContainerCount(Long complianceContainerCount) {
    this.complianceContainerCount = complianceContainerCount;
  }

  public UsageComplianceHour complianceHostCount(Long complianceHostCount) {
    this.complianceHostCount = complianceHostCount;
    return this;
  }

  /**
   * The total number of compliance hosts hours from the start of the given hour&#39;s month until
   * the given hour.
   *
   * @return complianceHostCount
   */
  @javax.annotation.Nullable
  @ApiModelProperty(
      value =
          "The total number of compliance hosts hours from the start of the given hour's month"
              + " until the given hour.")
  @JsonProperty(JSON_PROPERTY_COMPLIANCE_HOST_COUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Long getComplianceHostCount() {
    return complianceHostCount;
  }

  public void setComplianceHostCount(Long complianceHostCount) {
    this.complianceHostCount = complianceHostCount;
  }

  public UsageComplianceHour hour(OffsetDateTime hour) {
    this.hour = hour;
    return this;
  }

  /**
   * The hour for the usage.
   *
   * @return hour
   */
  @javax.annotation.Nullable
  @ApiModelProperty(value = "The hour for the usage.")
  @JsonProperty(JSON_PROPERTY_HOUR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public OffsetDateTime getHour() {
    return hour;
  }

  public void setHour(OffsetDateTime hour) {
    this.hour = hour;
  }

  /** Return true if this UsageComplianceHour object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsageComplianceHour usageComplianceHour = (UsageComplianceHour) o;
    return Objects.equals(
            this.complianceContainerCount, usageComplianceHour.complianceContainerCount)
        && Objects.equals(this.complianceHostCount, usageComplianceHour.complianceHostCount)
        && Objects.equals(this.hour, usageComplianceHour.hour);
  }

  @Override
  public int hashCode() {
    return Objects.hash(complianceContainerCount, complianceHostCount, hour);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsageComplianceHour {\n");
    sb.append("    complianceContainerCount: ")
        .append(toIndentedString(complianceContainerCount))
        .append("\n");
    sb.append("    complianceHostCount: ")
        .append(toIndentedString(complianceHostCount))
        .append("\n");
    sb.append("    hour: ").append(toIndentedString(hour)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
