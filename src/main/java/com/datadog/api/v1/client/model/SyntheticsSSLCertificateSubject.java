/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.datadog.api.v1.client.model;

import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.Objects;

/** Object describing the SSL certificate used for the test. */
@JsonPropertyOrder({
  SyntheticsSSLCertificateSubject.JSON_PROPERTY_C,
  SyntheticsSSLCertificateSubject.JSON_PROPERTY_CN,
  SyntheticsSSLCertificateSubject.JSON_PROPERTY_L,
  SyntheticsSSLCertificateSubject.JSON_PROPERTY_O,
  SyntheticsSSLCertificateSubject.JSON_PROPERTY_OU,
  SyntheticsSSLCertificateSubject.JSON_PROPERTY_ST,
  SyntheticsSSLCertificateSubject.JSON_PROPERTY_ALT_NAME
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class SyntheticsSSLCertificateSubject {
  @JsonIgnore public boolean unparsed = false;
  public static final String JSON_PROPERTY_C = "C";
  private String c;

  public static final String JSON_PROPERTY_CN = "CN";
  private String cn;

  public static final String JSON_PROPERTY_L = "L";
  private String l;

  public static final String JSON_PROPERTY_O = "O";
  private String o;

  public static final String JSON_PROPERTY_OU = "OU";
  private String ou;

  public static final String JSON_PROPERTY_ST = "ST";
  private String st;

  public static final String JSON_PROPERTY_ALT_NAME = "altName";
  private String altName;

  public SyntheticsSSLCertificateSubject c(String c) {
    this.c = c;
    return this;
  }

  /**
   * Country Name associated with the certificate.
   *
   * @return c
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_C)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getC() {
    return c;
  }

  public void setC(String c) {
    this.c = c;
  }

  public SyntheticsSSLCertificateSubject cn(String cn) {
    this.cn = cn;
    return this;
  }

  /**
   * Common Name that associated with the certificate.
   *
   * @return cn
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getCn() {
    return cn;
  }

  public void setCn(String cn) {
    this.cn = cn;
  }

  public SyntheticsSSLCertificateSubject l(String l) {
    this.l = l;
    return this;
  }

  /**
   * Locality associated with the certificate.
   *
   * @return l
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_L)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getL() {
    return l;
  }

  public void setL(String l) {
    this.l = l;
  }

  public SyntheticsSSLCertificateSubject o(String o) {
    this.o = o;
    return this;
  }

  /**
   * Organization associated with the certificate.
   *
   * @return o
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_O)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getO() {
    return o;
  }

  public void setO(String o) {
    this.o = o;
  }

  public SyntheticsSSLCertificateSubject ou(String ou) {
    this.ou = ou;
    return this;
  }

  /**
   * Organizational Unit associated with the certificate.
   *
   * @return ou
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_OU)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getOu() {
    return ou;
  }

  public void setOu(String ou) {
    this.ou = ou;
  }

  public SyntheticsSSLCertificateSubject st(String st) {
    this.st = st;
    return this;
  }

  /**
   * State Or Province Name associated with the certificate.
   *
   * @return st
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ST)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getSt() {
    return st;
  }

  public void setSt(String st) {
    this.st = st;
  }

  public SyntheticsSSLCertificateSubject altName(String altName) {
    this.altName = altName;
    return this;
  }

  /**
   * Subject Alternative Name associated with the certificate.
   *
   * @return altName
   */
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ALT_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAltName() {
    return altName;
  }

  public void setAltName(String altName) {
    this.altName = altName;
  }

  /** Return true if this SyntheticsSSLCertificateSubject object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SyntheticsSSLCertificateSubject syntheticsSslCertificateSubject =
        (SyntheticsSSLCertificateSubject) o;
    return Objects.equals(this.c, syntheticsSslCertificateSubject.c)
        && Objects.equals(this.cn, syntheticsSslCertificateSubject.cn)
        && Objects.equals(this.l, syntheticsSslCertificateSubject.l)
        && Objects.equals(this.o, syntheticsSslCertificateSubject.o)
        && Objects.equals(this.ou, syntheticsSslCertificateSubject.ou)
        && Objects.equals(this.st, syntheticsSslCertificateSubject.st)
        && Objects.equals(this.altName, syntheticsSslCertificateSubject.altName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(c, cn, l, o, ou, st, altName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SyntheticsSSLCertificateSubject {\n");
    sb.append("    c: ").append(toIndentedString(c)).append("\n");
    sb.append("    cn: ").append(toIndentedString(cn)).append("\n");
    sb.append("    l: ").append(toIndentedString(l)).append("\n");
    sb.append("    o: ").append(toIndentedString(o)).append("\n");
    sb.append("    ou: ").append(toIndentedString(ou)).append("\n");
    sb.append("    st: ").append(toIndentedString(st)).append("\n");
    sb.append("    altName: ").append(toIndentedString(altName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
