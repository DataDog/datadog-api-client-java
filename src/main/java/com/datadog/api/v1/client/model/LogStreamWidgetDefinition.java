/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.datadog.api.v1.client.model.WidgetTextAlign;
import com.datadog.api.v1.client.model.WidgetTime;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import com.datadog.api.v1.client.model.WidgetDefinition;
import com.fasterxml.jackson.annotation.JsonSubTypes;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;

/**
 * The Log Stream displays a log flow matching the defined query. Only available on FREE layout dashboards
 */
@ApiModel(description = "The Log Stream displays a log flow matching the defined query. Only available on FREE layout dashboards")
@JsonPropertyOrder({
  LogStreamWidgetDefinition.JSON_PROPERTY_COLUMNS,
  LogStreamWidgetDefinition.JSON_PROPERTY_INDEXES,
  LogStreamWidgetDefinition.JSON_PROPERTY_QUERY,
  LogStreamWidgetDefinition.JSON_PROPERTY_TIME,
  LogStreamWidgetDefinition.JSON_PROPERTY_TITLE,
  LogStreamWidgetDefinition.JSON_PROPERTY_TITLE_ALIGN,
  LogStreamWidgetDefinition.JSON_PROPERTY_TITLE_SIZE,
  LogStreamWidgetDefinition.JSON_PROPERTY_TYPE
})

public class LogStreamWidgetDefinition implements WidgetDefinition {
  public static final String JSON_PROPERTY_COLUMNS = "columns";
  private List<String> columns = null;

  public static final String JSON_PROPERTY_INDEXES = "indexes";
  private List<String> indexes = null;

  public static final String JSON_PROPERTY_QUERY = "query";
  private String query;

  public static final String JSON_PROPERTY_TIME = "time";
  private WidgetTime time;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_TITLE_ALIGN = "title_align";
  private WidgetTextAlign titleAlign;

  public static final String JSON_PROPERTY_TITLE_SIZE = "title_size";
  private String titleSize;

  public static final String JSON_PROPERTY_TYPE = "type";
  private String type = "log_stream";


  public LogStreamWidgetDefinition columns(List<String> columns) {
    
    this.columns = columns;
    return this;
  }

  public LogStreamWidgetDefinition addColumnsItem(String columnsItem) {
    if (this.columns == null) {
      this.columns = new ArrayList<>();
    }
    this.columns.add(columnsItem);
    return this;
  }

   /**
   * Which columns to display on the widget
   * @return columns
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Which columns to display on the widget")
  @JsonProperty(JSON_PROPERTY_COLUMNS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getColumns() {
    return columns;
  }


  public void setColumns(List<String> columns) {
    this.columns = columns;
  }


  public LogStreamWidgetDefinition indexes(List<String> indexes) {
    
    this.indexes = indexes;
    return this;
  }

  public LogStreamWidgetDefinition addIndexesItem(String indexesItem) {
    if (this.indexes == null) {
      this.indexes = new ArrayList<>();
    }
    this.indexes.add(indexesItem);
    return this;
  }

   /**
   * An array of index names to query in the stream.
   * @return indexes
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "An array of index names to query in the stream.")
  @JsonProperty(JSON_PROPERTY_INDEXES)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<String> getIndexes() {
    return indexes;
  }


  public void setIndexes(List<String> indexes) {
    this.indexes = indexes;
  }


  public LogStreamWidgetDefinition query(String query) {
    
    this.query = query;
    return this;
  }

   /**
   * Query to filter the log stream with
   * @return query
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Query to filter the log stream with")
  @JsonProperty(JSON_PROPERTY_QUERY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getQuery() {
    return query;
  }


  public void setQuery(String query) {
    this.query = query;
  }


  public LogStreamWidgetDefinition time(WidgetTime time) {
    
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WidgetTime getTime() {
    return time;
  }


  public void setTime(WidgetTime time) {
    this.time = time;
  }


  public LogStreamWidgetDefinition title(String title) {
    
    this.title = title;
    return this;
  }

   /**
   * Title of the widget
   * @return title
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Title of the widget")
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitle() {
    return title;
  }


  public void setTitle(String title) {
    this.title = title;
  }


  public LogStreamWidgetDefinition titleAlign(WidgetTextAlign titleAlign) {
    
    this.titleAlign = titleAlign;
    return this;
  }

   /**
   * Get titleAlign
   * @return titleAlign
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")
  @JsonProperty(JSON_PROPERTY_TITLE_ALIGN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public WidgetTextAlign getTitleAlign() {
    return titleAlign;
  }


  public void setTitleAlign(WidgetTextAlign titleAlign) {
    this.titleAlign = titleAlign;
  }


  public LogStreamWidgetDefinition titleSize(String titleSize) {
    
    this.titleSize = titleSize;
    return this;
  }

   /**
   * Size of the title
   * @return titleSize
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Size of the title")
  @JsonProperty(JSON_PROPERTY_TITLE_SIZE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTitleSize() {
    return titleSize;
  }


  public void setTitleSize(String titleSize) {
    this.titleSize = titleSize;
  }


   /**
   * Type of the widget
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Type of the widget")
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getType() {
    return type;
  }




  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LogStreamWidgetDefinition logStreamWidgetDefinition = (LogStreamWidgetDefinition) o;
    return Objects.equals(this.columns, logStreamWidgetDefinition.columns) &&
        Objects.equals(this.indexes, logStreamWidgetDefinition.indexes) &&
        Objects.equals(this.query, logStreamWidgetDefinition.query) &&
        Objects.equals(this.time, logStreamWidgetDefinition.time) &&
        Objects.equals(this.title, logStreamWidgetDefinition.title) &&
        Objects.equals(this.titleAlign, logStreamWidgetDefinition.titleAlign) &&
        Objects.equals(this.titleSize, logStreamWidgetDefinition.titleSize) &&
        Objects.equals(this.type, logStreamWidgetDefinition.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(columns, indexes, query, time, title, titleAlign, titleSize, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LogStreamWidgetDefinition {\n");
    sb.append("    columns: ").append(toIndentedString(columns)).append("\n");
    sb.append("    indexes: ").append(toIndentedString(indexes)).append("\n");
    sb.append("    query: ").append(toIndentedString(query)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    titleAlign: ").append(toIndentedString(titleAlign)).append("\n");
    sb.append("    titleSize: ").append(toIndentedString(titleSize)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

