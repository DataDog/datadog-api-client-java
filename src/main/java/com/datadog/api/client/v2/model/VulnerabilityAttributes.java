/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

package com.datadog.api.client.v2.model;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonIgnore;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Objects;

/** The JSON:API attributes of the vulnerability. */
@JsonPropertyOrder({
  VulnerabilityAttributes.JSON_PROPERTY_ADVISORY_ID,
  VulnerabilityAttributes.JSON_PROPERTY_CODE_LOCATION,
  VulnerabilityAttributes.JSON_PROPERTY_CVE_LIST,
  VulnerabilityAttributes.JSON_PROPERTY_CVSS,
  VulnerabilityAttributes.JSON_PROPERTY_DEPENDENCY_LOCATIONS,
  VulnerabilityAttributes.JSON_PROPERTY_DESCRIPTION,
  VulnerabilityAttributes.JSON_PROPERTY_ECOSYSTEM,
  VulnerabilityAttributes.JSON_PROPERTY_EXPOSURE_TIME,
  VulnerabilityAttributes.JSON_PROPERTY_FIRST_DETECTION,
  VulnerabilityAttributes.JSON_PROPERTY_FIX_AVAILABLE,
  VulnerabilityAttributes.JSON_PROPERTY_LANGUAGE,
  VulnerabilityAttributes.JSON_PROPERTY_LAST_DETECTION,
  VulnerabilityAttributes.JSON_PROPERTY_LIBRARY,
  VulnerabilityAttributes.JSON_PROPERTY_REMEDIATIONS,
  VulnerabilityAttributes.JSON_PROPERTY_REPO_DIGESTS,
  VulnerabilityAttributes.JSON_PROPERTY_RISKS,
  VulnerabilityAttributes.JSON_PROPERTY_STATUS,
  VulnerabilityAttributes.JSON_PROPERTY_TITLE,
  VulnerabilityAttributes.JSON_PROPERTY_TOOL,
  VulnerabilityAttributes.JSON_PROPERTY_TYPE
})
@jakarta.annotation.Generated(
    value = "https://github.com/DataDog/datadog-api-client-java/blob/master/.generator")
public class VulnerabilityAttributes {
  @JsonIgnore public boolean unparsed = false;
  public static final String JSON_PROPERTY_ADVISORY_ID = "advisory_id";
  private String advisoryId;

  public static final String JSON_PROPERTY_CODE_LOCATION = "code_location";
  private CodeLocation codeLocation;

  public static final String JSON_PROPERTY_CVE_LIST = "cve_list";
  private List<String> cveList = new ArrayList<>();

  public static final String JSON_PROPERTY_CVSS = "cvss";
  private VulnerabilityCvss cvss;

  public static final String JSON_PROPERTY_DEPENDENCY_LOCATIONS = "dependency_locations";
  private VulnerabilityDependencyLocations dependencyLocations;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  private String description;

  public static final String JSON_PROPERTY_ECOSYSTEM = "ecosystem";
  private VulnerabilityEcosystem ecosystem;

  public static final String JSON_PROPERTY_EXPOSURE_TIME = "exposure_time";
  private Long exposureTime;

  public static final String JSON_PROPERTY_FIRST_DETECTION = "first_detection";
  private String firstDetection;

  public static final String JSON_PROPERTY_FIX_AVAILABLE = "fix_available";
  private Boolean fixAvailable;

  public static final String JSON_PROPERTY_LANGUAGE = "language";
  private String language;

  public static final String JSON_PROPERTY_LAST_DETECTION = "last_detection";
  private String lastDetection;

  public static final String JSON_PROPERTY_LIBRARY = "library";
  private Library library;

  public static final String JSON_PROPERTY_REMEDIATIONS = "remediations";
  private List<Remediation> remediations = new ArrayList<>();

  public static final String JSON_PROPERTY_REPO_DIGESTS = "repo_digests";
  private List<String> repoDigests = null;

  public static final String JSON_PROPERTY_RISKS = "risks";
  private VulnerabilityRisks risks;

  public static final String JSON_PROPERTY_STATUS = "status";
  private VulnerabilityStatus status;

  public static final String JSON_PROPERTY_TITLE = "title";
  private String title;

  public static final String JSON_PROPERTY_TOOL = "tool";
  private VulnerabilityTool tool;

  public static final String JSON_PROPERTY_TYPE = "type";
  private VulnerabilityType type;

  public VulnerabilityAttributes() {}

  @JsonCreator
  public VulnerabilityAttributes(
      @JsonProperty(required = true, value = JSON_PROPERTY_CVE_LIST) List<String> cveList,
      @JsonProperty(required = true, value = JSON_PROPERTY_CVSS) VulnerabilityCvss cvss,
      @JsonProperty(required = true, value = JSON_PROPERTY_DESCRIPTION) String description,
      @JsonProperty(required = true, value = JSON_PROPERTY_EXPOSURE_TIME) Long exposureTime,
      @JsonProperty(required = true, value = JSON_PROPERTY_FIRST_DETECTION) String firstDetection,
      @JsonProperty(required = true, value = JSON_PROPERTY_FIX_AVAILABLE) Boolean fixAvailable,
      @JsonProperty(required = true, value = JSON_PROPERTY_LANGUAGE) String language,
      @JsonProperty(required = true, value = JSON_PROPERTY_LAST_DETECTION) String lastDetection,
      @JsonProperty(required = true, value = JSON_PROPERTY_REMEDIATIONS)
          List<Remediation> remediations,
      @JsonProperty(required = true, value = JSON_PROPERTY_RISKS) VulnerabilityRisks risks,
      @JsonProperty(required = true, value = JSON_PROPERTY_STATUS) VulnerabilityStatus status,
      @JsonProperty(required = true, value = JSON_PROPERTY_TITLE) String title,
      @JsonProperty(required = true, value = JSON_PROPERTY_TOOL) VulnerabilityTool tool,
      @JsonProperty(required = true, value = JSON_PROPERTY_TYPE) VulnerabilityType type) {
    this.cveList = cveList;
    this.cvss = cvss;
    this.unparsed |= cvss.unparsed;
    this.description = description;
    this.exposureTime = exposureTime;
    this.firstDetection = firstDetection;
    this.fixAvailable = fixAvailable;
    this.language = language;
    this.lastDetection = lastDetection;
    this.remediations = remediations;
    this.risks = risks;
    this.unparsed |= risks.unparsed;
    this.status = status;
    this.unparsed |= !status.isValid();
    this.title = title;
    this.tool = tool;
    this.unparsed |= !tool.isValid();
    this.type = type;
    this.unparsed |= !type.isValid();
  }

  public VulnerabilityAttributes advisoryId(String advisoryId) {
    this.advisoryId = advisoryId;
    return this;
  }

  /**
   * Vulnerability advisory ID.
   *
   * @return advisoryId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ADVISORY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public String getAdvisoryId() {
    return advisoryId;
  }

  public void setAdvisoryId(String advisoryId) {
    this.advisoryId = advisoryId;
  }

  public VulnerabilityAttributes codeLocation(CodeLocation codeLocation) {
    this.codeLocation = codeLocation;
    this.unparsed |= codeLocation.unparsed;
    return this;
  }

  /**
   * Code vulnerability location.
   *
   * @return codeLocation
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_CODE_LOCATION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public CodeLocation getCodeLocation() {
    return codeLocation;
  }

  public void setCodeLocation(CodeLocation codeLocation) {
    this.codeLocation = codeLocation;
  }

  public VulnerabilityAttributes cveList(List<String> cveList) {
    this.cveList = cveList;
    return this;
  }

  public VulnerabilityAttributes addCveListItem(String cveListItem) {
    this.cveList.add(cveListItem);
    return this;
  }

  /**
   * Vulnerability CVE list.
   *
   * @return cveList
   */
  @JsonProperty(JSON_PROPERTY_CVE_LIST)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<String> getCveList() {
    return cveList;
  }

  public void setCveList(List<String> cveList) {
    this.cveList = cveList;
  }

  public VulnerabilityAttributes cvss(VulnerabilityCvss cvss) {
    this.cvss = cvss;
    this.unparsed |= cvss.unparsed;
    return this;
  }

  /**
   * Vulnerability severities.
   *
   * @return cvss
   */
  @JsonProperty(JSON_PROPERTY_CVSS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public VulnerabilityCvss getCvss() {
    return cvss;
  }

  public void setCvss(VulnerabilityCvss cvss) {
    this.cvss = cvss;
  }

  public VulnerabilityAttributes dependencyLocations(
      VulnerabilityDependencyLocations dependencyLocations) {
    this.dependencyLocations = dependencyLocations;
    this.unparsed |= dependencyLocations.unparsed;
    return this;
  }

  /**
   * Static library vulnerability location.
   *
   * @return dependencyLocations
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DEPENDENCY_LOCATIONS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public VulnerabilityDependencyLocations getDependencyLocations() {
    return dependencyLocations;
  }

  public void setDependencyLocations(VulnerabilityDependencyLocations dependencyLocations) {
    this.dependencyLocations = dependencyLocations;
  }

  public VulnerabilityAttributes description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Vulnerability description.
   *
   * @return description
   */
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public VulnerabilityAttributes ecosystem(VulnerabilityEcosystem ecosystem) {
    this.ecosystem = ecosystem;
    this.unparsed |= !ecosystem.isValid();
    return this;
  }

  /**
   * The related vulnerability asset ecosystem.
   *
   * @return ecosystem
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ECOSYSTEM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public VulnerabilityEcosystem getEcosystem() {
    return ecosystem;
  }

  public void setEcosystem(VulnerabilityEcosystem ecosystem) {
    if (!ecosystem.isValid()) {
      this.unparsed = true;
    }
    this.ecosystem = ecosystem;
  }

  public VulnerabilityAttributes exposureTime(Long exposureTime) {
    this.exposureTime = exposureTime;
    return this;
  }

  /**
   * Vulnerability exposure time in seconds.
   *
   * @return exposureTime
   */
  @JsonProperty(JSON_PROPERTY_EXPOSURE_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Long getExposureTime() {
    return exposureTime;
  }

  public void setExposureTime(Long exposureTime) {
    this.exposureTime = exposureTime;
  }

  public VulnerabilityAttributes firstDetection(String firstDetection) {
    this.firstDetection = firstDetection;
    return this;
  }

  /**
   * First detection of the vulnerability in <a
   * href="https://datatracker.ietf.org/doc/html/rfc3339">RFC 3339</a> format
   *
   * @return firstDetection
   */
  @JsonProperty(JSON_PROPERTY_FIRST_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getFirstDetection() {
    return firstDetection;
  }

  public void setFirstDetection(String firstDetection) {
    this.firstDetection = firstDetection;
  }

  public VulnerabilityAttributes fixAvailable(Boolean fixAvailable) {
    this.fixAvailable = fixAvailable;
    return this;
  }

  /**
   * Whether the vulnerability has a remediation or not.
   *
   * @return fixAvailable
   */
  @JsonProperty(JSON_PROPERTY_FIX_AVAILABLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public Boolean getFixAvailable() {
    return fixAvailable;
  }

  public void setFixAvailable(Boolean fixAvailable) {
    this.fixAvailable = fixAvailable;
  }

  public VulnerabilityAttributes language(String language) {
    this.language = language;
    return this;
  }

  /**
   * Vulnerability language.
   *
   * @return language
   */
  @JsonProperty(JSON_PROPERTY_LANGUAGE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getLanguage() {
    return language;
  }

  public void setLanguage(String language) {
    this.language = language;
  }

  public VulnerabilityAttributes lastDetection(String lastDetection) {
    this.lastDetection = lastDetection;
    return this;
  }

  /**
   * Last detection of the vulnerability in <a
   * href="https://datatracker.ietf.org/doc/html/rfc3339">RFC 3339</a> format
   *
   * @return lastDetection
   */
  @JsonProperty(JSON_PROPERTY_LAST_DETECTION)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getLastDetection() {
    return lastDetection;
  }

  public void setLastDetection(String lastDetection) {
    this.lastDetection = lastDetection;
  }

  public VulnerabilityAttributes library(Library library) {
    this.library = library;
    this.unparsed |= library.unparsed;
    return this;
  }

  /**
   * Vulnerability library.
   *
   * @return library
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LIBRARY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public Library getLibrary() {
    return library;
  }

  public void setLibrary(Library library) {
    this.library = library;
  }

  public VulnerabilityAttributes remediations(List<Remediation> remediations) {
    this.remediations = remediations;
    for (Remediation item : remediations) {
      this.unparsed |= item.unparsed;
    }
    return this;
  }

  public VulnerabilityAttributes addRemediationsItem(Remediation remediationsItem) {
    this.remediations.add(remediationsItem);
    this.unparsed |= remediationsItem.unparsed;
    return this;
  }

  /**
   * List of remediations.
   *
   * @return remediations
   */
  @JsonProperty(JSON_PROPERTY_REMEDIATIONS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public List<Remediation> getRemediations() {
    return remediations;
  }

  public void setRemediations(List<Remediation> remediations) {
    this.remediations = remediations;
  }

  public VulnerabilityAttributes repoDigests(List<String> repoDigests) {
    this.repoDigests = repoDigests;
    return this;
  }

  public VulnerabilityAttributes addRepoDigestsItem(String repoDigestsItem) {
    if (this.repoDigests == null) {
      this.repoDigests = new ArrayList<>();
    }
    this.repoDigests.add(repoDigestsItem);
    return this;
  }

  /**
   * Vulnerability <code>repo_digest</code> list (when the vulnerability is related to <code>Image
   * </code> asset).
   *
   * @return repoDigests
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REPO_DIGESTS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public List<String> getRepoDigests() {
    return repoDigests;
  }

  public void setRepoDigests(List<String> repoDigests) {
    this.repoDigests = repoDigests;
  }

  public VulnerabilityAttributes risks(VulnerabilityRisks risks) {
    this.risks = risks;
    this.unparsed |= risks.unparsed;
    return this;
  }

  /**
   * Vulnerability risks.
   *
   * @return risks
   */
  @JsonProperty(JSON_PROPERTY_RISKS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public VulnerabilityRisks getRisks() {
    return risks;
  }

  public void setRisks(VulnerabilityRisks risks) {
    this.risks = risks;
  }

  public VulnerabilityAttributes status(VulnerabilityStatus status) {
    this.status = status;
    this.unparsed |= !status.isValid();
    return this;
  }

  /**
   * The vulnerability status.
   *
   * @return status
   */
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public VulnerabilityStatus getStatus() {
    return status;
  }

  public void setStatus(VulnerabilityStatus status) {
    if (!status.isValid()) {
      this.unparsed = true;
    }
    this.status = status;
  }

  public VulnerabilityAttributes title(String title) {
    this.title = title;
    return this;
  }

  /**
   * Vulnerability title.
   *
   * @return title
   */
  @JsonProperty(JSON_PROPERTY_TITLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public VulnerabilityAttributes tool(VulnerabilityTool tool) {
    this.tool = tool;
    this.unparsed |= !tool.isValid();
    return this;
  }

  /**
   * The vulnerability tool.
   *
   * @return tool
   */
  @JsonProperty(JSON_PROPERTY_TOOL)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public VulnerabilityTool getTool() {
    return tool;
  }

  public void setTool(VulnerabilityTool tool) {
    if (!tool.isValid()) {
      this.unparsed = true;
    }
    this.tool = tool;
  }

  public VulnerabilityAttributes type(VulnerabilityType type) {
    this.type = type;
    this.unparsed |= !type.isValid();
    return this;
  }

  /**
   * The vulnerability type.
   *
   * @return type
   */
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public VulnerabilityType getType() {
    return type;
  }

  public void setType(VulnerabilityType type) {
    if (!type.isValid()) {
      this.unparsed = true;
    }
    this.type = type;
  }

  /**
   * A container for additional, undeclared properties. This is a holder for any undeclared
   * properties as specified with the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value. If the property
   * does not already exist, create it otherwise replace it.
   *
   * @param key The arbitrary key to set
   * @param value The associated value
   * @return VulnerabilityAttributes
   */
  @JsonAnySetter
  public VulnerabilityAttributes putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
      this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return The additional properties
   */
  @JsonAnyGetter
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key The arbitrary key to get
   * @return The specific additional property for the given key
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
      return null;
    }
    return this.additionalProperties.get(key);
  }

  /** Return true if this VulnerabilityAttributes object is equal to o. */
  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VulnerabilityAttributes vulnerabilityAttributes = (VulnerabilityAttributes) o;
    return Objects.equals(this.advisoryId, vulnerabilityAttributes.advisoryId)
        && Objects.equals(this.codeLocation, vulnerabilityAttributes.codeLocation)
        && Objects.equals(this.cveList, vulnerabilityAttributes.cveList)
        && Objects.equals(this.cvss, vulnerabilityAttributes.cvss)
        && Objects.equals(this.dependencyLocations, vulnerabilityAttributes.dependencyLocations)
        && Objects.equals(this.description, vulnerabilityAttributes.description)
        && Objects.equals(this.ecosystem, vulnerabilityAttributes.ecosystem)
        && Objects.equals(this.exposureTime, vulnerabilityAttributes.exposureTime)
        && Objects.equals(this.firstDetection, vulnerabilityAttributes.firstDetection)
        && Objects.equals(this.fixAvailable, vulnerabilityAttributes.fixAvailable)
        && Objects.equals(this.language, vulnerabilityAttributes.language)
        && Objects.equals(this.lastDetection, vulnerabilityAttributes.lastDetection)
        && Objects.equals(this.library, vulnerabilityAttributes.library)
        && Objects.equals(this.remediations, vulnerabilityAttributes.remediations)
        && Objects.equals(this.repoDigests, vulnerabilityAttributes.repoDigests)
        && Objects.equals(this.risks, vulnerabilityAttributes.risks)
        && Objects.equals(this.status, vulnerabilityAttributes.status)
        && Objects.equals(this.title, vulnerabilityAttributes.title)
        && Objects.equals(this.tool, vulnerabilityAttributes.tool)
        && Objects.equals(this.type, vulnerabilityAttributes.type)
        && Objects.equals(this.additionalProperties, vulnerabilityAttributes.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(
        advisoryId,
        codeLocation,
        cveList,
        cvss,
        dependencyLocations,
        description,
        ecosystem,
        exposureTime,
        firstDetection,
        fixAvailable,
        language,
        lastDetection,
        library,
        remediations,
        repoDigests,
        risks,
        status,
        title,
        tool,
        type,
        additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VulnerabilityAttributes {\n");
    sb.append("    advisoryId: ").append(toIndentedString(advisoryId)).append("\n");
    sb.append("    codeLocation: ").append(toIndentedString(codeLocation)).append("\n");
    sb.append("    cveList: ").append(toIndentedString(cveList)).append("\n");
    sb.append("    cvss: ").append(toIndentedString(cvss)).append("\n");
    sb.append("    dependencyLocations: ")
        .append(toIndentedString(dependencyLocations))
        .append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    ecosystem: ").append(toIndentedString(ecosystem)).append("\n");
    sb.append("    exposureTime: ").append(toIndentedString(exposureTime)).append("\n");
    sb.append("    firstDetection: ").append(toIndentedString(firstDetection)).append("\n");
    sb.append("    fixAvailable: ").append(toIndentedString(fixAvailable)).append("\n");
    sb.append("    language: ").append(toIndentedString(language)).append("\n");
    sb.append("    lastDetection: ").append(toIndentedString(lastDetection)).append("\n");
    sb.append("    library: ").append(toIndentedString(library)).append("\n");
    sb.append("    remediations: ").append(toIndentedString(remediations)).append("\n");
    sb.append("    repoDigests: ").append(toIndentedString(repoDigests)).append("\n");
    sb.append("    risks: ").append(toIndentedString(risks)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    tool: ").append(toIndentedString(tool)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    additionalProperties: ")
        .append(toIndentedString(additionalProperties))
        .append("\n");
    sb.append('}');
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}
