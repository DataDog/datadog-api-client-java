/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 */

package com.datadog.api.client.v2.model;

import com.datadog.api.client.ModelEnum;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.core.JsonGenerator;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.SerializerProvider;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ser.std.StdSerializer;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashSet;
import java.util.Set;

/** The related vulnerability asset ecosystem. */
@JsonSerialize(using = VulnerabilityEcosystem.VulnerabilityEcosystemSerializer.class)
public class VulnerabilityEcosystem extends ModelEnum<String> {

  private static final Set<String> allowedValues =
      new HashSet<String>(
          Arrays.asList(
              "PyPI",
              "Maven",
              "NuGet",
              "Npm",
              "RubyGems",
              "Go",
              "Packagist",
              "Ddeb",
              "Rpm",
              "Apk",
              "Windows"));

  public static final VulnerabilityEcosystem PYPI = new VulnerabilityEcosystem("PyPI");
  public static final VulnerabilityEcosystem MAVEN = new VulnerabilityEcosystem("Maven");
  public static final VulnerabilityEcosystem NUGET = new VulnerabilityEcosystem("NuGet");
  public static final VulnerabilityEcosystem NPM = new VulnerabilityEcosystem("Npm");
  public static final VulnerabilityEcosystem RUBY_GEMS = new VulnerabilityEcosystem("RubyGems");
  public static final VulnerabilityEcosystem GO = new VulnerabilityEcosystem("Go");
  public static final VulnerabilityEcosystem PACKAGIST = new VulnerabilityEcosystem("Packagist");
  public static final VulnerabilityEcosystem D_DEB = new VulnerabilityEcosystem("Ddeb");
  public static final VulnerabilityEcosystem RPM = new VulnerabilityEcosystem("Rpm");
  public static final VulnerabilityEcosystem APK = new VulnerabilityEcosystem("Apk");
  public static final VulnerabilityEcosystem WINDOWS = new VulnerabilityEcosystem("Windows");

  VulnerabilityEcosystem(String value) {
    super(value, allowedValues);
  }

  public static class VulnerabilityEcosystemSerializer
      extends StdSerializer<VulnerabilityEcosystem> {
    public VulnerabilityEcosystemSerializer(Class<VulnerabilityEcosystem> t) {
      super(t);
    }

    public VulnerabilityEcosystemSerializer() {
      this(null);
    }

    @Override
    public void serialize(
        VulnerabilityEcosystem value, JsonGenerator jgen, SerializerProvider provider)
        throws IOException, JsonProcessingException {
      jgen.writeObject(value.value);
    }
  }

  @JsonCreator
  public static VulnerabilityEcosystem fromValue(String value) {
    return new VulnerabilityEcosystem(value);
  }
}
