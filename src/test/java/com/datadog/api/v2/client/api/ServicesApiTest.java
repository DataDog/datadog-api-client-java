/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v2.client.api;

import com.datadog.api.v2.client.*;
import com.datadog.api.v2.client.auth.*;
import com.datadog.api.v2.client.model.APIErrorResponse;
import com.datadog.api.v2.client.model.ServiceCreateRequest;
import com.datadog.api.v2.client.model.ServiceResponse;
import com.datadog.api.v2.client.model.ServiceUpdateRequest;
import com.datadog.api.v2.client.model.ServicesResponse;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ServicesApi
 */
public class ServicesApiTest {

    private final ServicesApi api = new ServicesApi();

    /**
     * Create a new service
     *
     * Creates a new service.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createServiceTest() throws ApiException {
        //ServiceCreateRequest body = null;
        //ServiceResponse response = api.createService()
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Delete an existing service
     *
     * Deletes an existing service.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteServiceTest() throws ApiException {
        //String serviceId = null;
        //api.deleteService(serviceId)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get details of a service
     *
     * Get details of a service. If the &#x60;include[users]&#x60; query parameter is provided, the included attribute will contain the users related to these services
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getServiceTest() throws ApiException {
        //String serviceId = null;
        //String include = null;
        //ServiceResponse response = api.getService(serviceId)
        //        .include(include)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get a list of all services
     *
     * Get all services for the requesting user&#39;s organization. If the &#x60;include[users]&#x60; query parameter is provided, the included attribute will contain the users related to these services.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getServicesTest() throws ApiException {
        //String include = null;
        //Long pageSize = null;
        //Long pageOffset = null;
        //ServicesResponse response = api.getServices()
        //        .include(include)
        //        .pageSize(pageSize)
        //        .pageOffset(pageOffset)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Update an existing service
     *
     * Updates an existing service. Only provide the attributes which should be updated as this request is a partial update.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateServiceTest() throws ApiException {
        //String serviceId = null;
        //ServiceUpdateRequest body = null;
        //ServiceResponse response = api.updateService(serviceId)
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

}
