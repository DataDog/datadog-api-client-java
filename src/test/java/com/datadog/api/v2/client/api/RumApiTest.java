/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.datadog.api.v2.client.api;

import com.datadog.api.v2.client.*;
import com.datadog.api.v2.client.auth.*;
import org.junit.Test;

/** API tests for RumApi */
public class RumApiTest {

  private final RumApi api = new RumApi();

  /**
   * Get a list of RUM events
   *
   * <p>List endpoint returns events that match a RUM search query. [Results are paginated][1]. Use
   * this endpoint to see your latest RUM events. [1]:
   * https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void listRUMEventsTest() throws ApiException {
    // String filterQuery = null;
    // OffsetDateTime filterFrom = null;
    // OffsetDateTime filterTo = null;
    // RUMSort sort = null;
    // String pageCursor = null;
    // Integer pageLimit = null;
    // RUMEventsResponse response = api.listRUMEvents()
    //        .filterQuery(filterQuery)
    //        .filterFrom(filterFrom)
    //        .filterTo(filterTo)
    //        .sort(sort)
    //        .pageCursor(pageCursor)
    //        .pageLimit(pageLimit)
    //        .execute();
    // TODO: test validations
  }

  /**
   * Search RUM events
   *
   * <p>List endpoint returns RUM events that match a RUM search query. [Results are paginated][1].
   * Use this endpoint to build complex RUM events filtering and search. [1]:
   * https://docs.datadoghq.com/logs/guide/collect-multiple-logs-with-pagination
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void searchRUMEventsTest() throws ApiException {
    // RUMSearchEventsRequest body = null;
    // RUMEventsResponse response = api.searchRUMEvents()
    //        .body(body)
    //        .execute();
    // TODO: test validations
  }
}
