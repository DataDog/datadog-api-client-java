/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v2.client.api;

import com.datadog.api.v2.client.*;
import com.datadog.api.v2.client.auth.*;
import com.datadog.api.v2.client.model.APIErrorResponse;
import com.datadog.api.v2.client.model.IncidentCreateRequest;
import com.datadog.api.v2.client.model.IncidentResponse;
import com.datadog.api.v2.client.model.IncidentUpdateRequest;
import com.datadog.api.v2.client.model.IncidentsResponse;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for IncidentsApi
 */
public class IncidentsApiTest {

    private final IncidentsApi api = new IncidentsApi();

    /**
     * Create an incident
     *
     * Create an incident.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createIncidentTest() throws ApiException {
        //IncidentCreateRequest body = null;
        //IncidentResponse response = api.createIncident()
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Delete an existing incident
     *
     * Deletes an existing incident from the users organization.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteIncidentTest() throws ApiException {
        //String incidentId = null;
        //api.deleteIncident(incidentId)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get the details of an incident
     *
     * Get the details of an incident by &#x60;incident_id&#x60;.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getIncidentTest() throws ApiException {
        //String incidentId = null;
        //List<String> include = null;
        //IncidentResponse response = api.getIncident(incidentId)
        //        .include(include)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Get a list of incidents
     *
     * Get all incidents for the user&#39;s organization.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void listIncidentsTest() throws ApiException {
        //List<String> include = null;
        //Long pageSize = null;
        //Long pageOffset = null;
        //IncidentsResponse response = api.listIncidents()
        //        .include(include)
        //        .pageSize(pageSize)
        //        .pageOffset(pageOffset)
        //        .execute();
        // TODO: test validations
    }

    /**
     * Update an existing incident
     *
     * Updates an incident. Provide only the attributes that should be updated as this request is a partial update.
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void updateIncidentTest() throws ApiException {
        //String incidentId = null;
        //IncidentUpdateRequest body = null;
        //IncidentResponse response = api.updateIncident(incidentId)
        //        .body(body)
        //        .execute();
        // TODO: test validations
    }

}
