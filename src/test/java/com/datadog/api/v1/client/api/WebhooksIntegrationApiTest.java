/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

package com.datadog.api.v1.client.api;

import com.datadog.api.v1.client.*;
import com.datadog.api.v1.client.auth.*;
import org.junit.Test;

/** API tests for WebhooksIntegrationApi */
public class WebhooksIntegrationApiTest {

  private final WebhooksIntegrationApi api = new WebhooksIntegrationApi();

  /**
   * Create a webhooks integration
   *
   * <p>Creates an endpoint with the name &#x60;&lt;WEBHOOK_NAME&gt;&#x60;.
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void createWebhooksIntegrationTest() throws ApiException {
    // WebhooksIntegration body = null;
    // WebhooksIntegration response = api.createWebhooksIntegration()
    //        .body(body)
    //        .execute();
    // TODO: test validations
  }

  /**
   * Create a custom variable
   *
   * <p>Creates an endpoint with the name &#x60;&lt;CUSTOM_VARIABLE_NAME&gt;&#x60;.
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void createWebhooksIntegrationCustomVariableTest() throws ApiException {
    // WebhooksIntegrationCustomVariable body = null;
    // WebhooksIntegrationCustomVariableResponse response =
    // api.createWebhooksIntegrationCustomVariable()
    //        .body(body)
    //        .execute();
    // TODO: test validations
  }

  /**
   * Delete a webhook
   *
   * <p>Deletes the endpoint with the name &#x60;&lt;WEBHOOK NAME&gt;&#x60;.
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void deleteWebhooksIntegrationTest() throws ApiException {
    // String webhookName = null;
    // api.deleteWebhooksIntegration(webhookName)
    //        .execute();
    // TODO: test validations
  }

  /**
   * Delete a custom variable
   *
   * <p>Deletes the endpoint with the name &#x60;&lt;CUSTOM_VARIABLE_NAME&gt;&#x60;.
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void deleteWebhooksIntegrationCustomVariableTest() throws ApiException {
    // String customVariableName = null;
    // api.deleteWebhooksIntegrationCustomVariable(customVariableName)
    //        .execute();
    // TODO: test validations
  }

  /**
   * Get a webhook integration
   *
   * <p>Gets the content of the webhook with the name &#x60;&lt;WEBHOOK_NAME&gt;&#x60;.
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void getWebhooksIntegrationTest() throws ApiException {
    // String webhookName = null;
    // WebhooksIntegration response = api.getWebhooksIntegration(webhookName)
    //        .execute();
    // TODO: test validations
  }

  /**
   * Get a custom variable
   *
   * <p>Shows the content of the custom variable with the name
   * &#x60;&lt;CUSTOM_VARIABLE_NAME&gt;&#x60;. If the custom variable is secret, the value does not
   * return in the response payload.
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void getWebhooksIntegrationCustomVariableTest() throws ApiException {
    // String customVariableName = null;
    // WebhooksIntegrationCustomVariableResponse response =
    // api.getWebhooksIntegrationCustomVariable(customVariableName)
    //        .execute();
    // TODO: test validations
  }

  /**
   * Update a webhook
   *
   * <p>Updates the endpoint with the name &#x60;&lt;WEBHOOK_NAME&gt;&#x60;.
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void updateWebhooksIntegrationTest() throws ApiException {
    // String webhookName = null;
    // WebhooksIntegrationUpdateRequest body = null;
    // WebhooksIntegration response = api.updateWebhooksIntegration(webhookName)
    //        .body(body)
    //        .execute();
    // TODO: test validations
  }

  /**
   * Update a custom variable
   *
   * <p>Updates the endpoint with the name &#x60;&lt;CUSTOM_VARIABLE_NAME&gt;&#x60;.
   *
   * @throws ApiException if the Api call fails
   */
  @Test
  public void updateWebhooksIntegrationCustomVariableTest() throws ApiException {
    // String customVariableName = null;
    // WebhooksIntegrationCustomVariableUpdateRequest body = null;
    // WebhooksIntegrationCustomVariableResponse response =
    // api.updateWebhooksIntegrationCustomVariable(customVariableName)
    //        .body(body)
    //        .execute();
    // TODO: test validations
  }
}
