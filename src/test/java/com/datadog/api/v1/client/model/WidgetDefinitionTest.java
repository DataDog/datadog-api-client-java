/*
 * Unless explicitly stated otherwise all files in this repository are licensed under the Apache-2.0 License.
 * This product includes software developed at Datadog (https://www.datadoghq.com/).
 * Copyright 2019-Present Datadog, Inc.
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.model;

import com.datadog.api.v1.client.model.AlertGraphWidgetDefinition;
import com.datadog.api.v1.client.model.AlertValueWidgetDefinition;
import com.datadog.api.v1.client.model.ChangeWidgetDefinition;
import com.datadog.api.v1.client.model.CheckStatusWidgetDefinition;
import com.datadog.api.v1.client.model.DistributionWidgetDefinition;
import com.datadog.api.v1.client.model.EventStreamWidgetDefinition;
import com.datadog.api.v1.client.model.EventTimelineWidgetDefinition;
import com.datadog.api.v1.client.model.FreeTextWidgetDefinition;
import com.datadog.api.v1.client.model.FunnelWidgetDefinition;
import com.datadog.api.v1.client.model.FunnelWidgetDefinitionType;
import com.datadog.api.v1.client.model.FunnelWidgetRequest;
import com.datadog.api.v1.client.model.GeomapWidgetDefinition;
import com.datadog.api.v1.client.model.GeomapWidgetDefinitionView;
import com.datadog.api.v1.client.model.GroupWidgetDefinition;
import com.datadog.api.v1.client.model.HeatMapWidgetDefinition;
import com.datadog.api.v1.client.model.HostMapWidgetDefinition;
import com.datadog.api.v1.client.model.HostMapWidgetDefinitionStyle;
import com.datadog.api.v1.client.model.IFrameWidgetDefinition;
import com.datadog.api.v1.client.model.ImageWidgetDefinition;
import com.datadog.api.v1.client.model.ListStreamWidgetDefinition;
import com.datadog.api.v1.client.model.LogStreamWidgetDefinition;
import com.datadog.api.v1.client.model.MonitorSummaryWidgetDefinition;
import com.datadog.api.v1.client.model.NoteWidgetDefinition;
import com.datadog.api.v1.client.model.QueryValueWidgetDefinition;
import com.datadog.api.v1.client.model.SLOWidgetDefinition;
import com.datadog.api.v1.client.model.ScatterPlotWidgetDefinition;
import com.datadog.api.v1.client.model.ServiceMapWidgetDefinition;
import com.datadog.api.v1.client.model.ServiceSummaryWidgetDefinition;
import com.datadog.api.v1.client.model.TableWidgetDefinition;
import com.datadog.api.v1.client.model.TableWidgetHasSearchBar;
import com.datadog.api.v1.client.model.TimeseriesWidgetDefinition;
import com.datadog.api.v1.client.model.TimeseriesWidgetLegendColumn;
import com.datadog.api.v1.client.model.TimeseriesWidgetLegendLayout;
import com.datadog.api.v1.client.model.ToplistWidgetDefinition;
import com.datadog.api.v1.client.model.TreeMapColorBy;
import com.datadog.api.v1.client.model.TreeMapGroupBy;
import com.datadog.api.v1.client.model.TreeMapSizeBy;
import com.datadog.api.v1.client.model.TreeMapWidgetDefinition;
import com.datadog.api.v1.client.model.Widget;
import com.datadog.api.v1.client.model.WidgetAxis;
import com.datadog.api.v1.client.model.WidgetColorPreference;
import com.datadog.api.v1.client.model.WidgetCustomLink;
import com.datadog.api.v1.client.model.WidgetEvent;
import com.datadog.api.v1.client.model.WidgetEventSize;
import com.datadog.api.v1.client.model.WidgetGrouping;
import com.datadog.api.v1.client.model.WidgetHorizontalAlign;
import com.datadog.api.v1.client.model.WidgetImageSizing;
import com.datadog.api.v1.client.model.WidgetLayoutType;
import com.datadog.api.v1.client.model.WidgetMargin;
import com.datadog.api.v1.client.model.WidgetMarker;
import com.datadog.api.v1.client.model.WidgetMessageDisplay;
import com.datadog.api.v1.client.model.WidgetMonitorSummarySort;
import com.datadog.api.v1.client.model.WidgetNodeType;
import com.datadog.api.v1.client.model.WidgetServiceSummaryDisplayFormat;
import com.datadog.api.v1.client.model.WidgetSizeFormat;
import com.datadog.api.v1.client.model.WidgetSummaryType;
import com.datadog.api.v1.client.model.WidgetTextAlign;
import com.datadog.api.v1.client.model.WidgetTickEdge;
import com.datadog.api.v1.client.model.WidgetTime;
import com.datadog.api.v1.client.model.WidgetTimeWindows;
import com.datadog.api.v1.client.model.WidgetVerticalAlign;
import com.datadog.api.v1.client.model.WidgetViewMode;
import com.datadog.api.v1.client.model.WidgetVizType;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for WidgetDefinition
 */
public class WidgetDefinitionTest {
    private final WidgetDefinition model = new WidgetDefinition();

    /**
     * Model tests for WidgetDefinition
     */
    @Test
    public void testWidgetDefinition() {
        // TODO: test WidgetDefinition
    }

    /**
     * Test the property 'alertId'
     */
    @Test
    public void alertIdTest() {
        // TODO: test alertId
    }

    /**
     * Test the property 'time'
     */
    @Test
    public void timeTest() {
        // TODO: test time
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'titleAlign'
     */
    @Test
    public void titleAlignTest() {
        // TODO: test titleAlign
    }

    /**
     * Test the property 'titleSize'
     */
    @Test
    public void titleSizeTest() {
        // TODO: test titleSize
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'vizType'
     */
    @Test
    public void vizTypeTest() {
        // TODO: test vizType
    }

    /**
     * Test the property 'precision'
     */
    @Test
    public void precisionTest() {
        // TODO: test precision
    }

    /**
     * Test the property 'textAlign'
     */
    @Test
    public void textAlignTest() {
        // TODO: test textAlign
    }

    /**
     * Test the property 'unit'
     */
    @Test
    public void unitTest() {
        // TODO: test unit
    }

    /**
     * Test the property 'customLinks'
     */
    @Test
    public void customLinksTest() {
        // TODO: test customLinks
    }

    /**
     * Test the property 'requests'
     */
    @Test
    public void requestsTest() {
        // TODO: test requests
    }

    /**
     * Test the property 'check'
     */
    @Test
    public void checkTest() {
        // TODO: test check
    }

    /**
     * Test the property 'group'
     */
    @Test
    public void groupTest() {
        // TODO: test group
    }

    /**
     * Test the property 'groupBy'
     */
    @Test
    public void groupByTest() {
        // TODO: test groupBy
    }

    /**
     * Test the property 'grouping'
     */
    @Test
    public void groupingTest() {
        // TODO: test grouping
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'legendSize'
     */
    @Test
    public void legendSizeTest() {
        // TODO: test legendSize
    }

    /**
     * Test the property 'markers'
     */
    @Test
    public void markersTest() {
        // TODO: test markers
    }

    /**
     * Test the property 'showLegend'
     */
    @Test
    public void showLegendTest() {
        // TODO: test showLegend
    }

    /**
     * Test the property 'xaxis'
     */
    @Test
    public void xaxisTest() {
        // TODO: test xaxis
    }

    /**
     * Test the property 'yaxis'
     */
    @Test
    public void yaxisTest() {
        // TODO: test yaxis
    }

    /**
     * Test the property 'eventSize'
     */
    @Test
    public void eventSizeTest() {
        // TODO: test eventSize
    }

    /**
     * Test the property 'query'
     */
    @Test
    public void queryTest() {
        // TODO: test query
    }

    /**
     * Test the property 'tagsExecution'
     */
    @Test
    public void tagsExecutionTest() {
        // TODO: test tagsExecution
    }

    /**
     * Test the property 'color'
     */
    @Test
    public void colorTest() {
        // TODO: test color
    }

    /**
     * Test the property 'fontSize'
     */
    @Test
    public void fontSizeTest() {
        // TODO: test fontSize
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'style'
     */
    @Test
    public void styleTest() {
        // TODO: test style
    }

    /**
     * Test the property 'view'
     */
    @Test
    public void viewTest() {
        // TODO: test view
    }

    /**
     * Test the property 'backgroundColor'
     */
    @Test
    public void backgroundColorTest() {
        // TODO: test backgroundColor
    }

    /**
     * Test the property 'bannerImg'
     */
    @Test
    public void bannerImgTest() {
        // TODO: test bannerImg
    }

    /**
     * Test the property 'layoutType'
     */
    @Test
    public void layoutTypeTest() {
        // TODO: test layoutType
    }

    /**
     * Test the property 'showTitle'
     */
    @Test
    public void showTitleTest() {
        // TODO: test showTitle
    }

    /**
     * Test the property 'widgets'
     */
    @Test
    public void widgetsTest() {
        // TODO: test widgets
    }

    /**
     * Test the property 'events'
     */
    @Test
    public void eventsTest() {
        // TODO: test events
    }

    /**
     * Test the property 'noGroupHosts'
     */
    @Test
    public void noGroupHostsTest() {
        // TODO: test noGroupHosts
    }

    /**
     * Test the property 'noMetricHosts'
     */
    @Test
    public void noMetricHostsTest() {
        // TODO: test noMetricHosts
    }

    /**
     * Test the property 'nodeType'
     */
    @Test
    public void nodeTypeTest() {
        // TODO: test nodeType
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'scope'
     */
    @Test
    public void scopeTest() {
        // TODO: test scope
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'hasBackground'
     */
    @Test
    public void hasBackgroundTest() {
        // TODO: test hasBackground
    }

    /**
     * Test the property 'hasBorder'
     */
    @Test
    public void hasBorderTest() {
        // TODO: test hasBorder
    }

    /**
     * Test the property 'horizontalAlign'
     */
    @Test
    public void horizontalAlignTest() {
        // TODO: test horizontalAlign
    }

    /**
     * Test the property 'margin'
     */
    @Test
    public void marginTest() {
        // TODO: test margin
    }

    /**
     * Test the property 'sizing'
     */
    @Test
    public void sizingTest() {
        // TODO: test sizing
    }

    /**
     * Test the property 'urlDarkTheme'
     */
    @Test
    public void urlDarkThemeTest() {
        // TODO: test urlDarkTheme
    }

    /**
     * Test the property 'verticalAlign'
     */
    @Test
    public void verticalAlignTest() {
        // TODO: test verticalAlign
    }

    /**
     * Test the property 'columns'
     */
    @Test
    public void columnsTest() {
        // TODO: test columns
    }

    /**
     * Test the property 'indexes'
     */
    @Test
    public void indexesTest() {
        // TODO: test indexes
    }

    /**
     * Test the property 'logset'
     */
    @Test
    public void logsetTest() {
        // TODO: test logset
    }

    /**
     * Test the property 'messageDisplay'
     */
    @Test
    public void messageDisplayTest() {
        // TODO: test messageDisplay
    }

    /**
     * Test the property 'showDateColumn'
     */
    @Test
    public void showDateColumnTest() {
        // TODO: test showDateColumn
    }

    /**
     * Test the property 'showMessageColumn'
     */
    @Test
    public void showMessageColumnTest() {
        // TODO: test showMessageColumn
    }

    /**
     * Test the property 'sort'
     */
    @Test
    public void sortTest() {
        // TODO: test sort
    }

    /**
     * Test the property 'colorPreference'
     */
    @Test
    public void colorPreferenceTest() {
        // TODO: test colorPreference
    }

    /**
     * Test the property 'count'
     */
    @Test
    public void countTest() {
        // TODO: test count
    }

    /**
     * Test the property 'displayFormat'
     */
    @Test
    public void displayFormatTest() {
        // TODO: test displayFormat
    }

    /**
     * Test the property 'hideZeroCounts'
     */
    @Test
    public void hideZeroCountsTest() {
        // TODO: test hideZeroCounts
    }

    /**
     * Test the property 'showLastTriggered'
     */
    @Test
    public void showLastTriggeredTest() {
        // TODO: test showLastTriggered
    }

    /**
     * Test the property 'start'
     */
    @Test
    public void startTest() {
        // TODO: test start
    }

    /**
     * Test the property 'summaryType'
     */
    @Test
    public void summaryTypeTest() {
        // TODO: test summaryType
    }

    /**
     * Test the property 'content'
     */
    @Test
    public void contentTest() {
        // TODO: test content
    }

    /**
     * Test the property 'hasPadding'
     */
    @Test
    public void hasPaddingTest() {
        // TODO: test hasPadding
    }

    /**
     * Test the property 'showTick'
     */
    @Test
    public void showTickTest() {
        // TODO: test showTick
    }

    /**
     * Test the property 'tickEdge'
     */
    @Test
    public void tickEdgeTest() {
        // TODO: test tickEdge
    }

    /**
     * Test the property 'tickPos'
     */
    @Test
    public void tickPosTest() {
        // TODO: test tickPos
    }

    /**
     * Test the property 'autoscale'
     */
    @Test
    public void autoscaleTest() {
        // TODO: test autoscale
    }

    /**
     * Test the property 'customUnit'
     */
    @Test
    public void customUnitTest() {
        // TODO: test customUnit
    }

    /**
     * Test the property 'colorByGroups'
     */
    @Test
    public void colorByGroupsTest() {
        // TODO: test colorByGroups
    }

    /**
     * Test the property 'globalTimeTarget'
     */
    @Test
    public void globalTimeTargetTest() {
        // TODO: test globalTimeTarget
    }

    /**
     * Test the property 'showErrorBudget'
     */
    @Test
    public void showErrorBudgetTest() {
        // TODO: test showErrorBudget
    }

    /**
     * Test the property 'sloId'
     */
    @Test
    public void sloIdTest() {
        // TODO: test sloId
    }

    /**
     * Test the property 'timeWindows'
     */
    @Test
    public void timeWindowsTest() {
        // TODO: test timeWindows
    }

    /**
     * Test the property 'viewMode'
     */
    @Test
    public void viewModeTest() {
        // TODO: test viewMode
    }

    /**
     * Test the property 'viewType'
     */
    @Test
    public void viewTypeTest() {
        // TODO: test viewType
    }

    /**
     * Test the property 'filters'
     */
    @Test
    public void filtersTest() {
        // TODO: test filters
    }

    /**
     * Test the property 'service'
     */
    @Test
    public void serviceTest() {
        // TODO: test service
    }

    /**
     * Test the property 'env'
     */
    @Test
    public void envTest() {
        // TODO: test env
    }

    /**
     * Test the property 'showBreakdown'
     */
    @Test
    public void showBreakdownTest() {
        // TODO: test showBreakdown
    }

    /**
     * Test the property 'showDistribution'
     */
    @Test
    public void showDistributionTest() {
        // TODO: test showDistribution
    }

    /**
     * Test the property 'showErrors'
     */
    @Test
    public void showErrorsTest() {
        // TODO: test showErrors
    }

    /**
     * Test the property 'showHits'
     */
    @Test
    public void showHitsTest() {
        // TODO: test showHits
    }

    /**
     * Test the property 'showLatency'
     */
    @Test
    public void showLatencyTest() {
        // TODO: test showLatency
    }

    /**
     * Test the property 'showResourceList'
     */
    @Test
    public void showResourceListTest() {
        // TODO: test showResourceList
    }

    /**
     * Test the property 'sizeFormat'
     */
    @Test
    public void sizeFormatTest() {
        // TODO: test sizeFormat
    }

    /**
     * Test the property 'spanName'
     */
    @Test
    public void spanNameTest() {
        // TODO: test spanName
    }

    /**
     * Test the property 'hasSearchBar'
     */
    @Test
    public void hasSearchBarTest() {
        // TODO: test hasSearchBar
    }

    /**
     * Test the property 'legendColumns'
     */
    @Test
    public void legendColumnsTest() {
        // TODO: test legendColumns
    }

    /**
     * Test the property 'legendLayout'
     */
    @Test
    public void legendLayoutTest() {
        // TODO: test legendLayout
    }

    /**
     * Test the property 'rightYaxis'
     */
    @Test
    public void rightYaxisTest() {
        // TODO: test rightYaxis
    }

    /**
     * Test the property 'colorBy'
     */
    @Test
    public void colorByTest() {
        // TODO: test colorBy
    }

    /**
     * Test the property 'sizeBy'
     */
    @Test
    public void sizeByTest() {
        // TODO: test sizeBy
    }

}
