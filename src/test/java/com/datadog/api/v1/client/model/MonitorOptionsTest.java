/*
 * (C) Datadog, Inc. 2019
 * All rights reserved
 * Licensed under a 3-clause BSD style license (see LICENSE)
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.datadog.api.v1.client.model;

import com.datadog.api.v1.client.model.MonitorThresholds;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.Assert;
import org.junit.Ignore;
import org.junit.Test;


/**
 * Model tests for MonitorOptions
 */
public class MonitorOptionsTest {
    private final MonitorOptions model = new MonitorOptions();

    /**
     * Model tests for MonitorOptions
     */
    @Test
    public void testMonitorOptions() {
        // TODO: test MonitorOptions
    }

    /**
     * Test the property 'aggregation'
     */
    @Test
    public void aggregationTest() {
        // TODO: test aggregation
    }

    /**
     * Test the property 'deviceIds'
     */
    @Test
    public void deviceIdsTest() {
        // TODO: test deviceIds
    }

    /**
     * Test the property 'enableLogsSample'
     */
    @Test
    public void enableLogsSampleTest() {
        // TODO: test enableLogsSample
    }

    /**
     * Test the property 'escalationMessage'
     */
    @Test
    public void escalationMessageTest() {
        // TODO: test escalationMessage
    }

    /**
     * Test the property 'evaluationDelay'
     */
    @Test
    public void evaluationDelayTest() {
        // TODO: test evaluationDelay
    }

    /**
     * Test the property 'includeTags'
     */
    @Test
    public void includeTagsTest() {
        // TODO: test includeTags
    }

    /**
     * Test the property 'locked'
     */
    @Test
    public void lockedTest() {
        // TODO: test locked
    }

    /**
     * Test the property 'minFailureDuration'
     */
    @Test
    public void minFailureDurationTest() {
        // TODO: test minFailureDuration
    }

    /**
     * Test the property 'minLocationFailed'
     */
    @Test
    public void minLocationFailedTest() {
        // TODO: test minLocationFailed
    }

    /**
     * Test the property 'newHostDelay'
     */
    @Test
    public void newHostDelayTest() {
        // TODO: test newHostDelay
    }

    /**
     * Test the property 'noDataTimeframe'
     */
    @Test
    public void noDataTimeframeTest() {
        // TODO: test noDataTimeframe
    }

    /**
     * Test the property 'notifyAudit'
     */
    @Test
    public void notifyAuditTest() {
        // TODO: test notifyAudit
    }

    /**
     * Test the property 'notifyNoData'
     */
    @Test
    public void notifyNoDataTest() {
        // TODO: test notifyNoData
    }

    /**
     * Test the property 'renotifyInterval'
     */
    @Test
    public void renotifyIntervalTest() {
        // TODO: test renotifyInterval
    }

    /**
     * Test the property 'requireFullWindow'
     */
    @Test
    public void requireFullWindowTest() {
        // TODO: test requireFullWindow
    }

    /**
     * Test the property 'silenced'
     */
    @Test
    public void silencedTest() {
        // TODO: test silenced
    }

    /**
     * Test the property 'syntheticsCheckId'
     */
    @Test
    public void syntheticsCheckIdTest() {
        // TODO: test syntheticsCheckId
    }

    /**
     * Test the property 'thresholds'
     */
    @Test
    public void thresholdsTest() {
        // TODO: test thresholds
    }

    /**
     * Test the property 'timeoutH'
     */
    @Test
    public void timeoutHTest() {
        // TODO: test timeoutH
    }

}
