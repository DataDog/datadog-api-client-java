name: Run Tests

on:
  pull_request:
    branches:
      - master

concurrency:
  group: unit-${{ github.head_ref }}
  cancel-in-progress: true

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    if: false == startsWith(github.event.pull_request.head.ref, 'datadog-api-spec/generated/')
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-python@v1
      - name: Install pre-commit
        run: python -m pip install pre-commit
      - name: set PY
        run: echo "PY=$(python -c 'import hashlib, sys;print(hashlib.sha256(sys.version.encode()+sys.executable.encode()).hexdigest())')" >> $GITHUB_ENV
      - uses: actions/cache@v1
        with:
          path: ~/.cache/pre-commit
          key: pre-commit|${{ env.PY }}|${{ hashFiles('.pre-commit-config.yaml') }}
      - name: Run pre-commit
        run: pre-commit run --from-ref ${{ github.event.pull_request.base.sha }} --to-ref ${{ github.event.pull_request.head.sha }} --show-diff-on-failure --color=always

  test:
    strategy:
      matrix:
        # see DEVELOPMENT.md for information why we're using this specific combination
        # of JDKs to run unit tests on
        java-version:
          [
            "adopt@1.8.0-292",
            "openjdk@1.16.0-1",
          ]

    runs-on: ubuntu-18.04
    if: github.event.pull_request.draft == false && !contains(github.event.pull_request.labels.*.name, 'ci/skip') && !contains(github.event.pull_request.head.ref, 'datadog-api-spec/test/')
    steps:
      - name: Install Java
        # the setup-scala action is the only available action that allows us to access
        # https://github.com/shyiko/jabba - a tool that can install various JDKs
        uses: olafurpg/setup-scala@v10
        with:
          java-version: ${{ matrix.java-version }}
          jabba-version: 0.11.2
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Test
        run: ./run-tests.sh

  report:
    runs-on: ubuntu-latest
    if: always() && github.event_name == 'pull_request' && contains(github.event.pull_request.head.ref, 'datadog-api-spec/generated/')
    needs: test
    steps:
      - name: Get GitHub App token
        if: github.event_name == 'pull_request'
        id: get_token
        uses: tibdex/github-app-token@v1.3.0
        with:
          app_id: ${{ secrets.PIPELINE_GITHUB_APP_ID }}
          private_key: ${{ secrets.PIPELINE_GITHUB_APP_PRIVATE_KEY }}
          repository: DataDog/datadog-api-spec
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Post status check
        uses: DataDog/github-actions/post-status-check@v1.0.0
        with:
          github-token: ${{ steps.get_token.outputs.token }}
          repo: datadog-api-spec
          status: ${{ needs.test.result }}
          context: unit
